{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home \u00b6 CNCF Landscape","title":"Home"},{"location":"#home","text":"CNCF Landscape","title":"Home"},{"location":"ingress-nginx/annotations/","text":"Annotations \u00b6 \u53ef\u4ee5\u4e3a Ingress \u5bf9\u8c61\u6dfb\u52a0\u7279\u5b9a\u7684 annotations \u6765\u8fdb\u884c\u914d\u7f6e\u3002\u4f8b\u5982\uff1a apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx annotations : kubernetes.io/ingress.class : \"nginx\" nginx.ingress.kubernetes.io/ssl-redirect : \"false\" nginx.ingress.kubernetes.io/proxy-body-size : \"5m\" spec : rules : - http : paths : - path : / backend : serviceName : sample-service servicePort : 80 Tip \u9700\u8981\u6ce8\u610f\uff1a annotation \u7684 value \u5fc5\u987b\u4e3a\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6570\u5b57\u3001 true \u3001 false \uff0c\u90fd\u9700\u8981\u7528\u5f15\u53f7\u5f15\u8d77\u6765 annotation \u7684 key \u9ed8\u8ba4\u524d\u7f00\u4e3a nginx.ingress.kubernetes.io \uff0c\u53ef\u4ee5\u901a\u8fc7 ingress nginx controller \u7684\u542f\u52a8\u53c2\u6570 --annotations-prefix \u8fdb\u884c\u4fee\u6539 \u5b8c\u6574\u7684\u914d\u7f6e\u5217\u8868\u53ef\u4ee5\u53c2\u8003 Annotations .","title":"Annotations"},{"location":"ingress-nginx/annotations/#annotations","text":"\u53ef\u4ee5\u4e3a Ingress \u5bf9\u8c61\u6dfb\u52a0\u7279\u5b9a\u7684 annotations \u6765\u8fdb\u884c\u914d\u7f6e\u3002\u4f8b\u5982\uff1a apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx annotations : kubernetes.io/ingress.class : \"nginx\" nginx.ingress.kubernetes.io/ssl-redirect : \"false\" nginx.ingress.kubernetes.io/proxy-body-size : \"5m\" spec : rules : - http : paths : - path : / backend : serviceName : sample-service servicePort : 80 Tip \u9700\u8981\u6ce8\u610f\uff1a annotation \u7684 value \u5fc5\u987b\u4e3a\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6570\u5b57\u3001 true \u3001 false \uff0c\u90fd\u9700\u8981\u7528\u5f15\u53f7\u5f15\u8d77\u6765 annotation \u7684 key \u9ed8\u8ba4\u524d\u7f00\u4e3a nginx.ingress.kubernetes.io \uff0c\u53ef\u4ee5\u901a\u8fc7 ingress nginx controller \u7684\u542f\u52a8\u53c2\u6570 --annotations-prefix \u8fdb\u884c\u4fee\u6539 \u5b8c\u6574\u7684\u914d\u7f6e\u5217\u8868\u53ef\u4ee5\u53c2\u8003 Annotations .","title":"Annotations"},{"location":"ingress-nginx/configmap/","text":"ConfigMap \u00b6 \u901a\u8fc7 ConfigMap \u53ef\u4ee5\u4e3a Ingress Nginx \u505a\u5168\u5c40\u914d\u7f6e\u3002\u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u901a\u8fc7 --configmap \u6307\u5b9a\u6240\u7528\u7684 ConfigMap\uff0c\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u53ef\u4ee5\u67e5\u770b\uff1a $ kubectl describe deploy -n ingress nginx-nginx-ingress-controller Name: nginx-nginx-ingress-controller Namespace: ingress Pod Template: Containers: nginx-ingress-controller: Image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.24.1 Ports: 80 /TCP, 443 /TCP Host Ports: 0 /TCP, 0 /TCP Args: /nginx-ingress-controller --default-backend-service = ingress/nginx-nginx-ingress-default-backend --election-id = ingress-controller-leader --ingress-class = nginx --configmap = ingress/nginx-nginx-ingress-controller ... ... \u56e0\u6b64\u53ef\u4ee5\u914d\u7f6e\u5982\u4e0b ConfigMap: apiVersion : v1 kind : ConfigMap metadata : name : ingress-nginx-ingress-controller namespace : ingress data : map-hash-bucket-size : \"128\" ssl-protocols : SSLv2 Tip \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0cConfigMap \u4e2d key \u548c value \u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6570\u5b57\u3001 true \u3001 false \uff0c\u90fd\u9700\u8981\u7528\u5f15\u53f7\u5f15\u8d77\u6765\u3002 \u5b8c\u6574\u7684\u914d\u7f6e\u5217\u8868\u53ef\u4ee5\u53c2\u8003 ConfigMaps .","title":"ConfigMap"},{"location":"ingress-nginx/configmap/#configmap","text":"\u901a\u8fc7 ConfigMap \u53ef\u4ee5\u4e3a Ingress Nginx \u505a\u5168\u5c40\u914d\u7f6e\u3002\u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u901a\u8fc7 --configmap \u6307\u5b9a\u6240\u7528\u7684 ConfigMap\uff0c\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u53ef\u4ee5\u67e5\u770b\uff1a $ kubectl describe deploy -n ingress nginx-nginx-ingress-controller Name: nginx-nginx-ingress-controller Namespace: ingress Pod Template: Containers: nginx-ingress-controller: Image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.24.1 Ports: 80 /TCP, 443 /TCP Host Ports: 0 /TCP, 0 /TCP Args: /nginx-ingress-controller --default-backend-service = ingress/nginx-nginx-ingress-default-backend --election-id = ingress-controller-leader --ingress-class = nginx --configmap = ingress/nginx-nginx-ingress-controller ... ... \u56e0\u6b64\u53ef\u4ee5\u914d\u7f6e\u5982\u4e0b ConfigMap: apiVersion : v1 kind : ConfigMap metadata : name : ingress-nginx-ingress-controller namespace : ingress data : map-hash-bucket-size : \"128\" ssl-protocols : SSLv2 Tip \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0cConfigMap \u4e2d key \u548c value \u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6570\u5b57\u3001 true \u3001 false \uff0c\u90fd\u9700\u8981\u7528\u5f15\u53f7\u5f15\u8d77\u6765\u3002 \u5b8c\u6574\u7684\u914d\u7f6e\u5217\u8868\u53ef\u4ee5\u53c2\u8003 ConfigMaps .","title":"ConfigMap"},{"location":"ingress-nginx/getting-started/","text":"Getting Started \u00b6 \u5b89\u88c5 \u00b6 $ helm install stable/nginx-ingress --name nginx --namespace ingress \u66f4\u591a\u53c2\u8003 Installation Guide \u57fa\u672c\u4f7f\u7528 \u00b6 \u5148\u90e8\u7f72\u4e00\u4e2a httpbin \u670d\u52a1\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : httpbin spec : replicas : 3 selector : matchLabels : app : httpbin template : metadata : labels : app : httpbin spec : containers : - name : httpbin image : kennethreitz/httpbin ports : - containerPort : 80 --- apiVersion : v1 kind : Service metadata : name : httpbin spec : selector : app : httpbin type : NodePort ports : - port : 80 protocol : TCP targetPort : 80 \u914d\u7f6e Ingress\uff1a apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx annotations : kubernetes.io/ingress.class : \"nginx\" nginx.ingress.kubernetes.io/ssl-redirect : \"false\" spec : rules : - http : paths : - path : / backend : serviceName : httpbin servicePort : 80 \u914d\u7f6e \u00b6 \u901a\u8fc7 ConfigMap \u53ef\u4ee5\u8fdb\u884c\u5168\u5c40\u914d\u7f6e \u901a\u8fc7 Annotations \u53ef\u4ee5\u914d\u7f6e\u5355\u4e2a Ingress","title":"Getting Started"},{"location":"ingress-nginx/getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"ingress-nginx/getting-started/#_1","text":"$ helm install stable/nginx-ingress --name nginx --namespace ingress \u66f4\u591a\u53c2\u8003 Installation Guide","title":"\u5b89\u88c5"},{"location":"ingress-nginx/getting-started/#_2","text":"\u5148\u90e8\u7f72\u4e00\u4e2a httpbin \u670d\u52a1\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : httpbin spec : replicas : 3 selector : matchLabels : app : httpbin template : metadata : labels : app : httpbin spec : containers : - name : httpbin image : kennethreitz/httpbin ports : - containerPort : 80 --- apiVersion : v1 kind : Service metadata : name : httpbin spec : selector : app : httpbin type : NodePort ports : - port : 80 protocol : TCP targetPort : 80 \u914d\u7f6e Ingress\uff1a apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx annotations : kubernetes.io/ingress.class : \"nginx\" nginx.ingress.kubernetes.io/ssl-redirect : \"false\" spec : rules : - http : paths : - path : / backend : serviceName : httpbin servicePort : 80","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"ingress-nginx/getting-started/#_3","text":"\u901a\u8fc7 ConfigMap \u53ef\u4ee5\u8fdb\u884c\u5168\u5c40\u914d\u7f6e \u901a\u8fc7 Annotations \u53ef\u4ee5\u914d\u7f6e\u5355\u4e2a Ingress","title":"\u914d\u7f6e"},{"location":"k8s/","text":"Kubernetes \u00b6","title":"Intro"},{"location":"k8s/#kubernetes","text":"","title":"Kubernetes"},{"location":"k8s/guides/api/","text":"API \u00b6 \u53c2\u8003 \u00b6 The Kubernetes API","title":"API"},{"location":"k8s/guides/api/#api","text":"","title":"API"},{"location":"k8s/guides/api/#_1","text":"The Kubernetes API","title":"\u53c2\u8003"},{"location":"k8s/guides/components/","text":"\u57fa\u7840\u7ec4\u4ef6 \u00b6 Master \u7ec4\u4ef6 \u00b6 kube-apiserver \u00b6 etcd \u00b6 kube-scheduler \u00b6 kube-controller-manager \u00b6 cloud-controller-manager \u00b6 Node \u7ec4\u4ef6 \u00b6 kubelet \u00b6 kube-proxy \u00b6 \u53c2\u8003 \u00b6 Kubernetes Components cloud-controller-manager kube-apiserver kube-controller-manager kube-proxy kube-scheduler kubelet","title":"\u57fa\u7840\u7ec4\u4ef6"},{"location":"k8s/guides/components/#_1","text":"","title":"\u57fa\u7840\u7ec4\u4ef6"},{"location":"k8s/guides/components/#master","text":"","title":"Master \u7ec4\u4ef6"},{"location":"k8s/guides/components/#kube-apiserver","text":"","title":"kube-apiserver"},{"location":"k8s/guides/components/#etcd","text":"","title":"etcd"},{"location":"k8s/guides/components/#kube-scheduler","text":"","title":"kube-scheduler"},{"location":"k8s/guides/components/#kube-controller-manager","text":"","title":"kube-controller-manager"},{"location":"k8s/guides/components/#cloud-controller-manager","text":"","title":"cloud-controller-manager"},{"location":"k8s/guides/components/#node","text":"","title":"Node \u7ec4\u4ef6"},{"location":"k8s/guides/components/#kubelet","text":"","title":"kubelet"},{"location":"k8s/guides/components/#kube-proxy","text":"","title":"kube-proxy"},{"location":"k8s/guides/components/#_2","text":"Kubernetes Components cloud-controller-manager kube-apiserver kube-controller-manager kube-proxy kube-scheduler kubelet","title":"\u53c2\u8003"},{"location":"k8s/guides/gpu/","text":"GPU \u00b6 \u53c2\u8003 k8s-device-plugin .","title":"GPU"},{"location":"k8s/guides/gpu/#gpu","text":"\u53c2\u8003 k8s-device-plugin .","title":"GPU"},{"location":"k8s/guides/pod-schedule/","text":"Pod \u8c03\u5ea6 \u00b6 DaemonSet \u00b6 \u53c2\u8003 DaemonSet . taint \u00b6 resource requests / limits \u00b6 disruption \u00b6 \u53c2\u8003 PodDisruptionBudget . Pod Topology Spread Constraints \u00b6 \u53c2\u8003 Pod Topology Spread Constraints . nodeName \u00b6 nodeSelector \u00b6 affinity \u00b6","title":"Pod \u8c03\u5ea6"},{"location":"k8s/guides/pod-schedule/#pod","text":"","title":"Pod \u8c03\u5ea6"},{"location":"k8s/guides/pod-schedule/#daemonset","text":"\u53c2\u8003 DaemonSet .","title":"DaemonSet"},{"location":"k8s/guides/pod-schedule/#taint","text":"","title":"taint"},{"location":"k8s/guides/pod-schedule/#resource-requests-limits","text":"","title":"resource requests / limits"},{"location":"k8s/guides/pod-schedule/#disruption","text":"\u53c2\u8003 PodDisruptionBudget .","title":"disruption"},{"location":"k8s/guides/pod-schedule/#pod-topology-spread-constraints","text":"\u53c2\u8003 Pod Topology Spread Constraints .","title":"Pod Topology Spread Constraints"},{"location":"k8s/guides/pod-schedule/#nodename","text":"","title":"nodeName"},{"location":"k8s/guides/pod-schedule/#nodeselector","text":"","title":"nodeSelector"},{"location":"k8s/guides/pod-schedule/#affinity","text":"","title":"affinity"},{"location":"k8s/guides/rbac/","text":"RBAC \u00b6 Role & ClusterRole \u00b6 Role \u548c ClusterRole \u90fd\u662f\u5b9a\u4e49\u4e86\u89d2\u8272\uff08\u5305\u542b\u4e00\u4e9b\u7279\u5b9a\u7684\u6743\u9650\uff09\uff0c\u5176\u4e2d Role \u5b9a\u4e49\u7684\u89d2\u8272\u662f\u9650\u5b9a\u5728\u67d0\u4e00\u4e2a namespace \u5185\u7684\uff0c\u800c ClusterRole \u5b9a\u4e49\u7684\u89d2\u8272\u662f\u4f5c\u7528\u4e8e\u6574\u4e2a\u96c6\u7fa4\u7684\uff0c\u4f8b\u5982\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709 Namespace \u4e0b\u7684 Pod\uff0c\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e9b\u975e\u9650\u5b9a\u5728 Namespace \u5185\u7684\u8d44\u6e90\uff0c\u4f8b\u5982 Node\u3002 apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : namespace : default name : pod-reader rules : - apiGroups : [ \"\" ] # \"\" indicates the core API group resources : [ \"pods\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRole metadata : # \"namespace\" omitted since ClusterRoles are not namespaced name : secret-reader rules : - apiGroups : [ \"\" ] resources : [ \"secrets\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684 resources \u4ee5\u53ca verbs\uff1a $ kubectl api-resources -owide NAME SHORTNAMES APIGROUP NAMESPACED KIND VERBS bindings true Binding [ create ] componentstatuses cs false ComponentStatus [ get list ] configmaps cm true ConfigMap [ create delete deletecollection get list patch update watch ] endpoints ep true Endpoints [ create delete deletecollection get list patch update watch ] events ev true Event [ create delete deletecollection get list patch update watch ] limitranges limits true LimitRange [ create delete deletecollection get list patch update watch ] namespaces ns false Namespace [ create delete get list patch update watch ] nodes no false Node [ create delete deletecollection get list patch update watch ] daemonsets ds apps true DaemonSet [ create delete deletecollection get list patch update watch ] deployments deploy apps true Deployment [ create delete deletecollection get list patch update watch ] replicasets rs apps true ReplicaSet [ create delete deletecollection get list patch update watch ] statefulsets sts apps true StatefulSet [ create delete deletecollection get list patch update watch ] ... ... RoleBinding & ClusterRoleBinding \u00b6 RoleBinding \u548c ClusterRoleBinding \u662f\u5c06 Role \u548c ClusterRole \u4e0e User\uff0cGroup \u6216\u8005 ServiceAccount \u8fdb\u884c\u7ed1\u5b9a\uff0c\u8d4b\u4e88\u540e\u8005\u76f8\u5e94\u7684\u6743\u9650\u3002 apiVersion : rbac.authorization.k8s.io/v1 # This role binding allows \"jane\" to read pods in the \"default\" namespace. kind : RoleBinding metadata : name : read-pods namespace : default subjects : - kind : User name : jane # Name is case sensitive apiGroup : rbac.authorization.k8s.io roleRef : kind : Role #this must be Role or ClusterRole name : pod-reader # this must match the name of the Role or ClusterRole you wish to bind to apiGroup : rbac.authorization.k8s.io apiVersion : rbac.authorization.k8s.io/v1 # This cluster role binding allows anyone in the \"manager\" group to read secrets in any namespace. kind : ClusterRoleBinding metadata : name : read-secrets-global subjects : - kind : Group name : manager # Name is case sensitive apiGroup : rbac.authorization.k8s.io roleRef : kind : ClusterRole name : secret-reader apiGroup : rbac.authorization.k8s.io Role \u548c ClusterRole \u8fd8\u53ef\u4ee5\u7ed1\u5b9a\u5230 ServiceAccount\uff0c\u4f8b\u5982\uff1a apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRoleBinding metadata : name : read-secrets-global subjects : - kind : ServiceAccount name : default namespace : kube-system roleRef : kind : ClusterRole name : secret-reader apiGroup : rbac.authorization.k8s.io \u8d44\u6e90\u5f15\u7528 \u00b6 subresource \u00b6 \u4f8b\u5982 Pod \u7684\u65e5\u5fd7\uff0c\u5c31\u662f Pod \u7684\u5b50\u8d44\u6e90\uff0cURL \u8def\u5f84\u5982\u4e0b\uff1a GET /api/v1/namespaces/{namespace}/pods/{name}/log \u5728 Role \u6216 ClusterRole \u5b9a\u4e49\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 pods/log \u6765\u8868\u793a\u65e5\u5fd7\u8d44\u6e90\uff0c\u4f8b\u5982\uff1a apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : namespace : default name : pod-and-pod-logs-reader rules : - apiGroups : [ \"\" ] resources : [ \"pods\" , \"pods/log\" ] verbs : [ \"get\" , \"list\" ] resourceNames \u00b6 resourceNames \u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u7684\u8d44\u6e90\u540d\u79f0\uff0c\u5982\u679c\u8bbe\u5b9a\u7684\u8bdd\uff0c\u5219\u53ea\u80fd\u8bbf\u95ee\u6307\u5b9a\u540d\u5b57\u7684\u8d44\u6e90\u3002\u4f8b\u5982\uff1a apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : namespace : default name : configmap-updater rules : - apiGroups : [ \"\" ] resources : [ \"configmaps\" ] resourceNames : [ \"my-configmap\" ] verbs : [ \"update\" , \"get\" ] ClusterRole \u7ec4\u5408 \u00b6 \u4e00\u4e2a ClusterRole \u53ef\u4ee5\u7531\u591a\u4e2a ClusterRole \u7ec4\u5408\u800c\u6210\uff0c\u5b83\u7684\u6743\u9650\u662f\u7ec4\u6210\u5b83\u7684\u6240\u6709 ClusterRole \u7684\u6743\u9650\u7684\u5e76\u96c6\u3002\u4f8b\u5982\uff1a apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRole metadata : name : monitoring aggregationRule : clusterRoleSelectors : - matchLabels : rbac.example.com/aggregate-to-monitoring : \"true\" rules : [] # Rules are automatically filled in by the controller manager. --- apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRole metadata : name : monitoring-endpoints labels : rbac.example.com/aggregate-to-monitoring : \"true\" # These rules will be added to the \"monitoring\" role. rules : - apiGroups : [ \"\" ] resources : [ \"services\" , \"endpoints\" , \"pods\" ] verbs : [ \"get\" , \"list\" , \"watch\" ] \u53c2\u8003 \u00b6 Using RBAC Authorization","title":"RBAC"},{"location":"k8s/guides/rbac/#rbac","text":"","title":"RBAC"},{"location":"k8s/guides/rbac/#role-clusterrole","text":"Role \u548c ClusterRole \u90fd\u662f\u5b9a\u4e49\u4e86\u89d2\u8272\uff08\u5305\u542b\u4e00\u4e9b\u7279\u5b9a\u7684\u6743\u9650\uff09\uff0c\u5176\u4e2d Role \u5b9a\u4e49\u7684\u89d2\u8272\u662f\u9650\u5b9a\u5728\u67d0\u4e00\u4e2a namespace \u5185\u7684\uff0c\u800c ClusterRole \u5b9a\u4e49\u7684\u89d2\u8272\u662f\u4f5c\u7528\u4e8e\u6574\u4e2a\u96c6\u7fa4\u7684\uff0c\u4f8b\u5982\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709 Namespace \u4e0b\u7684 Pod\uff0c\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e9b\u975e\u9650\u5b9a\u5728 Namespace \u5185\u7684\u8d44\u6e90\uff0c\u4f8b\u5982 Node\u3002 apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : namespace : default name : pod-reader rules : - apiGroups : [ \"\" ] # \"\" indicates the core API group resources : [ \"pods\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRole metadata : # \"namespace\" omitted since ClusterRoles are not namespaced name : secret-reader rules : - apiGroups : [ \"\" ] resources : [ \"secrets\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684 resources \u4ee5\u53ca verbs\uff1a $ kubectl api-resources -owide NAME SHORTNAMES APIGROUP NAMESPACED KIND VERBS bindings true Binding [ create ] componentstatuses cs false ComponentStatus [ get list ] configmaps cm true ConfigMap [ create delete deletecollection get list patch update watch ] endpoints ep true Endpoints [ create delete deletecollection get list patch update watch ] events ev true Event [ create delete deletecollection get list patch update watch ] limitranges limits true LimitRange [ create delete deletecollection get list patch update watch ] namespaces ns false Namespace [ create delete get list patch update watch ] nodes no false Node [ create delete deletecollection get list patch update watch ] daemonsets ds apps true DaemonSet [ create delete deletecollection get list patch update watch ] deployments deploy apps true Deployment [ create delete deletecollection get list patch update watch ] replicasets rs apps true ReplicaSet [ create delete deletecollection get list patch update watch ] statefulsets sts apps true StatefulSet [ create delete deletecollection get list patch update watch ] ... ...","title":"Role &amp; ClusterRole"},{"location":"k8s/guides/rbac/#rolebinding-clusterrolebinding","text":"RoleBinding \u548c ClusterRoleBinding \u662f\u5c06 Role \u548c ClusterRole \u4e0e User\uff0cGroup \u6216\u8005 ServiceAccount \u8fdb\u884c\u7ed1\u5b9a\uff0c\u8d4b\u4e88\u540e\u8005\u76f8\u5e94\u7684\u6743\u9650\u3002 apiVersion : rbac.authorization.k8s.io/v1 # This role binding allows \"jane\" to read pods in the \"default\" namespace. kind : RoleBinding metadata : name : read-pods namespace : default subjects : - kind : User name : jane # Name is case sensitive apiGroup : rbac.authorization.k8s.io roleRef : kind : Role #this must be Role or ClusterRole name : pod-reader # this must match the name of the Role or ClusterRole you wish to bind to apiGroup : rbac.authorization.k8s.io apiVersion : rbac.authorization.k8s.io/v1 # This cluster role binding allows anyone in the \"manager\" group to read secrets in any namespace. kind : ClusterRoleBinding metadata : name : read-secrets-global subjects : - kind : Group name : manager # Name is case sensitive apiGroup : rbac.authorization.k8s.io roleRef : kind : ClusterRole name : secret-reader apiGroup : rbac.authorization.k8s.io Role \u548c ClusterRole \u8fd8\u53ef\u4ee5\u7ed1\u5b9a\u5230 ServiceAccount\uff0c\u4f8b\u5982\uff1a apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRoleBinding metadata : name : read-secrets-global subjects : - kind : ServiceAccount name : default namespace : kube-system roleRef : kind : ClusterRole name : secret-reader apiGroup : rbac.authorization.k8s.io","title":"RoleBinding &amp; ClusterRoleBinding"},{"location":"k8s/guides/rbac/#_1","text":"","title":"\u8d44\u6e90\u5f15\u7528"},{"location":"k8s/guides/rbac/#subresource","text":"\u4f8b\u5982 Pod \u7684\u65e5\u5fd7\uff0c\u5c31\u662f Pod \u7684\u5b50\u8d44\u6e90\uff0cURL \u8def\u5f84\u5982\u4e0b\uff1a GET /api/v1/namespaces/{namespace}/pods/{name}/log \u5728 Role \u6216 ClusterRole \u5b9a\u4e49\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 pods/log \u6765\u8868\u793a\u65e5\u5fd7\u8d44\u6e90\uff0c\u4f8b\u5982\uff1a apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : namespace : default name : pod-and-pod-logs-reader rules : - apiGroups : [ \"\" ] resources : [ \"pods\" , \"pods/log\" ] verbs : [ \"get\" , \"list\" ]","title":"subresource"},{"location":"k8s/guides/rbac/#resourcenames","text":"resourceNames \u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u7684\u8d44\u6e90\u540d\u79f0\uff0c\u5982\u679c\u8bbe\u5b9a\u7684\u8bdd\uff0c\u5219\u53ea\u80fd\u8bbf\u95ee\u6307\u5b9a\u540d\u5b57\u7684\u8d44\u6e90\u3002\u4f8b\u5982\uff1a apiVersion : rbac.authorization.k8s.io/v1 kind : Role metadata : namespace : default name : configmap-updater rules : - apiGroups : [ \"\" ] resources : [ \"configmaps\" ] resourceNames : [ \"my-configmap\" ] verbs : [ \"update\" , \"get\" ]","title":"resourceNames"},{"location":"k8s/guides/rbac/#clusterrole","text":"\u4e00\u4e2a ClusterRole \u53ef\u4ee5\u7531\u591a\u4e2a ClusterRole \u7ec4\u5408\u800c\u6210\uff0c\u5b83\u7684\u6743\u9650\u662f\u7ec4\u6210\u5b83\u7684\u6240\u6709 ClusterRole \u7684\u6743\u9650\u7684\u5e76\u96c6\u3002\u4f8b\u5982\uff1a apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRole metadata : name : monitoring aggregationRule : clusterRoleSelectors : - matchLabels : rbac.example.com/aggregate-to-monitoring : \"true\" rules : [] # Rules are automatically filled in by the controller manager. --- apiVersion : rbac.authorization.k8s.io/v1 kind : ClusterRole metadata : name : monitoring-endpoints labels : rbac.example.com/aggregate-to-monitoring : \"true\" # These rules will be added to the \"monitoring\" role. rules : - apiGroups : [ \"\" ] resources : [ \"services\" , \"endpoints\" , \"pods\" ] verbs : [ \"get\" , \"list\" , \"watch\" ]","title":"ClusterRole \u7ec4\u5408"},{"location":"k8s/guides/rbac/#_2","text":"Using RBAC Authorization","title":"\u53c2\u8003"},{"location":"k8s/objects/cluster-role-binding/","text":"ClusterRoleBinding \u00b6 \u8be6\u60c5\u67e5\u770b RBAC \u3002","title":"ClusterRoleBinding"},{"location":"k8s/objects/cluster-role-binding/#clusterrolebinding","text":"\u8be6\u60c5\u67e5\u770b RBAC \u3002","title":"ClusterRoleBinding"},{"location":"k8s/objects/cluster-role/","text":"ClusterRole \u00b6 \u8be6\u60c5\u67e5\u770b RBAC \u3002","title":"ClusterRole"},{"location":"k8s/objects/cluster-role/#clusterrole","text":"\u8be6\u60c5\u67e5\u770b RBAC \u3002","title":"ClusterRole"},{"location":"k8s/objects/component-status/","text":"ComponentStatus \u00b6 \u901a\u8fc7 kubectl get componentstatus \u53ef\u4ee5\u67e5\u770b\u96c6\u7fa4\u7684\u72b6\u6001\uff1a $ kubectl get componentstatus NAME STATUS MESSAGE ERROR controller-manager Healthy ok scheduler Healthy ok etcd-0 Healthy { \"health\" : \"true\" } $ kubectl get cs controller-manager -oyaml apiVersion: v1 conditions: - message: ok status: \"True\" type: Healthy kind: ComponentStatus metadata: creationTimestamp: null name: controller-manager selfLink: /api/v1/componentstatuses/controller-manager $ kubectl get cs scheduler -oyaml apiVersion: v1 conditions: - message: ok status: \"True\" type: Healthy kind: ComponentStatus metadata: creationTimestamp: null name: scheduler selfLink: /api/v1/componentstatuses/scheduler $ kubectl get cs etcd-0 -oyaml apiVersion: v1 conditions: - message: '{\"health\":\"true\"}' status: \"True\" type: Healthy kind: ComponentStatus metadata: creationTimestamp: null name: etcd-0 selfLink: /api/v1/componentstatuses/etcd-0","title":"ComponentStatus"},{"location":"k8s/objects/component-status/#componentstatus","text":"\u901a\u8fc7 kubectl get componentstatus \u53ef\u4ee5\u67e5\u770b\u96c6\u7fa4\u7684\u72b6\u6001\uff1a $ kubectl get componentstatus NAME STATUS MESSAGE ERROR controller-manager Healthy ok scheduler Healthy ok etcd-0 Healthy { \"health\" : \"true\" } $ kubectl get cs controller-manager -oyaml apiVersion: v1 conditions: - message: ok status: \"True\" type: Healthy kind: ComponentStatus metadata: creationTimestamp: null name: controller-manager selfLink: /api/v1/componentstatuses/controller-manager $ kubectl get cs scheduler -oyaml apiVersion: v1 conditions: - message: ok status: \"True\" type: Healthy kind: ComponentStatus metadata: creationTimestamp: null name: scheduler selfLink: /api/v1/componentstatuses/scheduler $ kubectl get cs etcd-0 -oyaml apiVersion: v1 conditions: - message: '{\"health\":\"true\"}' status: \"True\" type: Healthy kind: ComponentStatus metadata: creationTimestamp: null name: etcd-0 selfLink: /api/v1/componentstatuses/etcd-0","title":"ComponentStatus"},{"location":"k8s/objects/configmap/","text":"ConfigMap \u00b6 \u521b\u5efa ConfigMap \u00b6 From literal \u00b6 $ kubectl create configmap mysql-conf \\ --from-literal = host = mysql \\ --from-literal = port = 3306 From file \u00b6 $ echo -n mysql | tee host $ echo -n 3306 | tee port $ kubectl create configmap mysql-conf \\ --from-file = host \\ --from-file = port From directory \u00b6 $ echo -n mysql | tee conf/host $ echo -n 3306 | tee conf/port $ kubectl create configmap mysql-conf --from-file = conf/ From env file \u00b6 $ echo \"host=mysql\\nport=3306\" | tee conf.env $ kubectl create configmap mysql-conf --from-env-file = conf.env From YAML \u00b6 apiVersion : v1 kind : ConfigMap metadata : name : mysql-conf data : host : mysql port : \"3306\" $ kubectl create -f conf.yaml \u4f7f\u7528 ConfigMap \u00b6 \u4f5c\u4e3a\u73af\u5883\u53d8\u91cf \u00b6 \u53ef\u4ee5\u4f7f\u7528 env \u4ece ConfigMap \u4e2d\u53d6\u51fa\u7279\u5b9a\u7684\u503c\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff1a apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $MYSQL_HOST:$MYSQL_PORT env : - name : MYSQL_HOST valueFrom : configMapKeyRef : name : mysql-conf key : host - name : MYSQL_PORT valueFrom : configMapKeyRef : name : mysql-conf key : port restartPolicy : Never \u4e5f\u53ef\u4ee5\u4f7f\u7528 envFrom \u4f7f\u7528\u6574\u4e2a ConfigMap \u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff1a apiVersion : v1 kind : ConfigMap metadata : name : mysql-conf data : MYSQL_HOST : mysql MYSQL_PORT : \"3306\" --- apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $MYSQL_HOST:$MYSQL_PORT envFrom : - configMapRef : name : mysql-conf restartPolicy : Never \u4f5c\u4e3a Volume \u00b6 apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $(cat /app/config/mysql-host):$(cat /app/config/mysql-port) volumeMounts : - name : config mountPath : /app/config readOnly : true volumes : - name : config configMap : name : mysql-conf items : - key : host path : mysql-host - key : port path : mysql-port restartPolicy : Never ConfigMap \u4f5c\u4e3a Volume \u4f7f\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u8986\u76d6\u6389 mountPath \u76ee\u5f55\u4e0b\u7684\u5176\u5b83\u6587\u4ef6\u3002\u5982\u679c\u53ea\u662f\u60f3\u521b\u5efa\u51fa\u65b0\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u4f1a\u76ee\u5f55\u4e0b\u7684\u5176\u5b83\u6587\u4ef6\u4ea7\u751f\u5f71\u54cd\uff0c\u53ef\u4ee5\u4f7f\u7528 subPath \uff1a apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - ls /var; sleep 3000 volumeMounts : - name : config mountPath : /var/mysql-host subPath : mysql-host volumes : - name : config configMap : name : mysql-conf items : - key : host path : mysql-host - key : port path : mysql-port restartPolicy : Never \u5982\u679c ConfigMap \u7684\u6570\u636e\u53d1\u751f\u66f4\u65b0\uff0c\u76f8\u5e94\u7684 Volume \u5185\u5bb9\u4e5f\u4f1a\u8ddf\u7740\u81ea\u52a8\u66f4\u65b0\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f7f\u7528\u4e86 subPath \u7684 Volume \u5185\u5bb9\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u3002 \u53c2\u8003 \u00b6 Configure a Pod to Use a ConfigMap","title":"ConfigMap"},{"location":"k8s/objects/configmap/#configmap","text":"","title":"ConfigMap"},{"location":"k8s/objects/configmap/#configmap_1","text":"","title":"\u521b\u5efa ConfigMap"},{"location":"k8s/objects/configmap/#from-literal","text":"$ kubectl create configmap mysql-conf \\ --from-literal = host = mysql \\ --from-literal = port = 3306","title":"From literal"},{"location":"k8s/objects/configmap/#from-file","text":"$ echo -n mysql | tee host $ echo -n 3306 | tee port $ kubectl create configmap mysql-conf \\ --from-file = host \\ --from-file = port","title":"From file"},{"location":"k8s/objects/configmap/#from-directory","text":"$ echo -n mysql | tee conf/host $ echo -n 3306 | tee conf/port $ kubectl create configmap mysql-conf --from-file = conf/","title":"From directory"},{"location":"k8s/objects/configmap/#from-env-file","text":"$ echo \"host=mysql\\nport=3306\" | tee conf.env $ kubectl create configmap mysql-conf --from-env-file = conf.env","title":"From env file"},{"location":"k8s/objects/configmap/#from-yaml","text":"apiVersion : v1 kind : ConfigMap metadata : name : mysql-conf data : host : mysql port : \"3306\" $ kubectl create -f conf.yaml","title":"From YAML"},{"location":"k8s/objects/configmap/#configmap_2","text":"","title":"\u4f7f\u7528 ConfigMap"},{"location":"k8s/objects/configmap/#_1","text":"\u53ef\u4ee5\u4f7f\u7528 env \u4ece ConfigMap \u4e2d\u53d6\u51fa\u7279\u5b9a\u7684\u503c\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff1a apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $MYSQL_HOST:$MYSQL_PORT env : - name : MYSQL_HOST valueFrom : configMapKeyRef : name : mysql-conf key : host - name : MYSQL_PORT valueFrom : configMapKeyRef : name : mysql-conf key : port restartPolicy : Never \u4e5f\u53ef\u4ee5\u4f7f\u7528 envFrom \u4f7f\u7528\u6574\u4e2a ConfigMap \u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff1a apiVersion : v1 kind : ConfigMap metadata : name : mysql-conf data : MYSQL_HOST : mysql MYSQL_PORT : \"3306\" --- apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $MYSQL_HOST:$MYSQL_PORT envFrom : - configMapRef : name : mysql-conf restartPolicy : Never","title":"\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf"},{"location":"k8s/objects/configmap/#volume","text":"apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $(cat /app/config/mysql-host):$(cat /app/config/mysql-port) volumeMounts : - name : config mountPath : /app/config readOnly : true volumes : - name : config configMap : name : mysql-conf items : - key : host path : mysql-host - key : port path : mysql-port restartPolicy : Never ConfigMap \u4f5c\u4e3a Volume \u4f7f\u7528\u7684\u65f6\u5019\uff0c\u4f1a\u8986\u76d6\u6389 mountPath \u76ee\u5f55\u4e0b\u7684\u5176\u5b83\u6587\u4ef6\u3002\u5982\u679c\u53ea\u662f\u60f3\u521b\u5efa\u51fa\u65b0\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u4f1a\u76ee\u5f55\u4e0b\u7684\u5176\u5b83\u6587\u4ef6\u4ea7\u751f\u5f71\u54cd\uff0c\u53ef\u4ee5\u4f7f\u7528 subPath \uff1a apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - ls /var; sleep 3000 volumeMounts : - name : config mountPath : /var/mysql-host subPath : mysql-host volumes : - name : config configMap : name : mysql-conf items : - key : host path : mysql-host - key : port path : mysql-port restartPolicy : Never \u5982\u679c ConfigMap \u7684\u6570\u636e\u53d1\u751f\u66f4\u65b0\uff0c\u76f8\u5e94\u7684 Volume \u5185\u5bb9\u4e5f\u4f1a\u8ddf\u7740\u81ea\u52a8\u66f4\u65b0\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f7f\u7528\u4e86 subPath \u7684 Volume \u5185\u5bb9\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u3002","title":"\u4f5c\u4e3a Volume"},{"location":"k8s/objects/configmap/#_2","text":"Configure a Pod to Use a ConfigMap","title":"\u53c2\u8003"},{"location":"k8s/objects/cronjob/","text":"Cronjob \u00b6 \u53c2\u8003 \u00b6 CronJob","title":"CronJob"},{"location":"k8s/objects/cronjob/#cronjob","text":"","title":"Cronjob"},{"location":"k8s/objects/cronjob/#_1","text":"CronJob","title":"\u53c2\u8003"},{"location":"k8s/objects/daemon-set/","text":"DaemonSet \u00b6 \u521b\u5efa DaemonSet \u00b6 apiVersion : apps/v1 kind : DaemonSet metadata : name : fluentd-elasticsearch labels : k8s-app : fluentd-logging spec : selector : matchLabels : name : fluentd-elasticsearch template : metadata : labels : name : fluentd-elasticsearch spec : tolerations : - key : node-role.kubernetes.io/master effect : NoSchedule containers : - name : fluentd-elasticsearch image : fluent/fluentd:v1.7 resources : limits : memory : 200Mi requests : cpu : 100m memory : 200Mi volumeMounts : - name : varlog mountPath : /var/log - name : varlibdockercontainers mountPath : /var/lib/docker/containers readOnly : true terminationGracePeriodSeconds : 30 volumes : - name : varlog hostPath : path : /var/log - name : varlibdockercontainers hostPath : path : /var/lib/docker/containers $ kubectl get ds NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE fluentd-elasticsearch 3 3 3 3 3 <none> 109s $ kubectl get po -owide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES fluentd-elasticsearch-8ckdj 1 /1 Running 0 2m7s 10 .244.2.40 test-01 <none> <none> fluentd-elasticsearch-hv4nl 1 /1 Running 0 2m7s 10 .244.0.6 test-02 <none> <none> fluentd-elasticsearch-p78qr 1 /1 Running 0 2m7s 10 .244.1.25 test-03 <none> <none> \u53c2\u8003 \u00b6 DaemonSet","title":"DaemonSet"},{"location":"k8s/objects/daemon-set/#daemonset","text":"","title":"DaemonSet"},{"location":"k8s/objects/daemon-set/#daemonset_1","text":"apiVersion : apps/v1 kind : DaemonSet metadata : name : fluentd-elasticsearch labels : k8s-app : fluentd-logging spec : selector : matchLabels : name : fluentd-elasticsearch template : metadata : labels : name : fluentd-elasticsearch spec : tolerations : - key : node-role.kubernetes.io/master effect : NoSchedule containers : - name : fluentd-elasticsearch image : fluent/fluentd:v1.7 resources : limits : memory : 200Mi requests : cpu : 100m memory : 200Mi volumeMounts : - name : varlog mountPath : /var/log - name : varlibdockercontainers mountPath : /var/lib/docker/containers readOnly : true terminationGracePeriodSeconds : 30 volumes : - name : varlog hostPath : path : /var/log - name : varlibdockercontainers hostPath : path : /var/lib/docker/containers $ kubectl get ds NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE fluentd-elasticsearch 3 3 3 3 3 <none> 109s $ kubectl get po -owide NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES fluentd-elasticsearch-8ckdj 1 /1 Running 0 2m7s 10 .244.2.40 test-01 <none> <none> fluentd-elasticsearch-hv4nl 1 /1 Running 0 2m7s 10 .244.0.6 test-02 <none> <none> fluentd-elasticsearch-p78qr 1 /1 Running 0 2m7s 10 .244.1.25 test-03 <none> <none>","title":"\u521b\u5efa DaemonSet"},{"location":"k8s/objects/daemon-set/#_1","text":"DaemonSet","title":"\u53c2\u8003"},{"location":"k8s/objects/deployment/","text":"Deployment \u00b6 \u521b\u5efa Deployment \u00b6 apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 ports : - containerPort : 80 Deployment \u4f1a\u81ea\u52a8\u521b\u5efa ReplicaSet\uff1a $ kubectl get deploy NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 4s $ kubectl get rs NAME DESIRED CURRENT READY AGE nginx-65fc954674 3 3 3 12s $ kubectl get po NAME READY STATUS RESTARTS AGE nginx-65fc954674-2tc4v 1 /1 Running 0 15s nginx-65fc954674-fmqpf 1 /1 Running 0 15s nginx-65fc954674-ssz7x 1 /1 Running 0 15s \u6269\u5bb9 \u00b6 \u624b\u52a8\u6269\u5bb9 \u00b6 $ kubectl scale --replicas = 5 deploy/nginx \u81ea\u52a8\u6269\u5bb9 \u00b6 \u53c2\u8003 HorizontalPodAutoscaler \u3002 \u6eda\u52a8\u5347\u7ea7 \u00b6 \u5347\u7ea7 \u00b6 \u53ea\u6709\u5f53 Deployment \u4e2d Pod \u7684\u6a21\u677f\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u624d\u4f1a\u89e6\u53d1\u5347\u7ea7\uff0c\u5373 spec.template \u53d1\u751f\u53d8\u5316\u3002\u4f8b\u5982\u4fee\u6539\u955c\u50cf\u4e3a nginx:1.17.2 \uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.17.2 ports : - containerPort : 80 \u7136\u540e\u8fdb\u884c\u67e5\u770b\uff1a $ kubectl get deploy NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 4 3 3 48s $ demo kubectl get rs NAME DESIRED CURRENT READY AGE nginx-56b7d6bcf7 3 3 3 10s nginx-65fc954674 0 0 0 51s $ demo kubectl get po NAME READY STATUS RESTARTS AGE nginx-56b7d6bcf7-2jhsm 1 /1 Running 0 11s nginx-56b7d6bcf7-dxkf5 1 /1 Running 0 15s nginx-56b7d6bcf7-q6jss 1 /1 Running 0 13s \u53ef\u4ee5\u770b\u5230\uff0c\u66f4\u65b0\u4e4b\u540e\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684 ReplicaSet\u3002 \u67e5\u770b\u5347\u7ea7\u72b6\u6001\uff1a $ kubectl rollout status deploy/nginx deployment \"nginx\" successfully rolled out \u67e5\u770b Deployment \u7684\u6eda\u52a8\u5347\u7ea7\u8be6\u60c5\uff1a $ kubectl describe deploy nginx ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 3m deployment-controller Scaled up replica set nginx-65fc954674 to 3 Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-56b7d6bcf7 to 1 Normal ScalingReplicaSet 2m deployment-controller Scaled down replica set nginx-65fc954674 to 2 Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-56b7d6bcf7 to 2 Normal ScalingReplicaSet 2m deployment-controller Scaled down replica set nginx-65fc954674 to 1 Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-56b7d6bcf7 to 3 Normal ScalingReplicaSet 2m deployment-controller Scaled down replica set nginx-65fc954674 to 0 \u5347\u7ea7\u5386\u53f2 \u00b6 $ kubectl rollout history deploy/nginx deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> 2 <none> $ kubectl rollout history deploy/nginx --revision = 2 deployments \"nginx\" with revision #2 Pod Template: Labels: app = nginx pod-template-hash = 1263826793 Containers: nginx: Image: nginx:1.17.2 Port: 80 /TCP Host Port: 0 /TCP Environment: <none> Mounts: <none> Volumes: <none> .spec.revisionHistoryLimit \u53ef\u4ee5\u8bbe\u7f6e\u4fdd\u7559\u591a\u5c11\u6b21\u5347\u7ea7\u5386\u53f2\uff0c\u9ed8\u8ba4\u4e3a 10\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u4e0d\u4fdd\u7559\u4efb\u4f55\u5347\u7ea7\u5386\u53f2\uff0c\u56e0\u6b64\u4e5f\u5c31\u65e0\u6cd5\u6267\u884c\u56de\u6eda\u64cd\u4f5c\u3002 \u56de\u6eda \u00b6 \u4fee\u6539 YAML \u6587\u4ef6\u4e3a\u4e0a\u4e2a\u7248\u672c\uff0c\u91cd\u65b0 apply\uff0c\u53ef\u4ee5\u505a\u56de\u6eda\u64cd\u4f5c\uff1b\u6216\u8005 # \u56de\u6eda\u5230\u4e0a\u4e00\u7248\u672c $ kubectl rollout undo deploy/nginx # \u56de\u6eda\u5230\u6307\u5b9a\u7248\u672c $ kubectl rollout undo deploy/nginx --to-revision = 1 \u5347\u7ea7\u7b56\u7565 \u00b6 .spec.strategy \u53ef\u4ee5\u8bbe\u7f6e\u5347\u7ea7\u7b56\u7565\uff0c\u5176\u4e2d .spec.strategy.type \u53ef\u4ee5\u53d6\u503c\u4e3a\uff1a Recreate\uff1a\u4f1a\u76f4\u63a5 kill \u6389\u5df2\u6709 Pod\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa RollingUpdate\uff1a\u6eda\u52a8\u5347\u7ea7\uff0c\u9ed8\u8ba4\u7b56\u7565\u3002\u5982\u679c\u4e3a\u8be5\u7b56\u7565\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e maxUnavailable \u548c maxSurge \u6765\u63a7\u5236\u5347\u7ea7\u7684\u8fc7\u7a0b \u66f4\u591a\u8be6\u60c5\u53c2\u8003 Strategy \u3002 \u53c2\u8003 \u00b6 Deployments","title":"Deployment"},{"location":"k8s/objects/deployment/#deployment","text":"","title":"Deployment"},{"location":"k8s/objects/deployment/#deployment_1","text":"apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 ports : - containerPort : 80 Deployment \u4f1a\u81ea\u52a8\u521b\u5efa ReplicaSet\uff1a $ kubectl get deploy NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 3 3 3 4s $ kubectl get rs NAME DESIRED CURRENT READY AGE nginx-65fc954674 3 3 3 12s $ kubectl get po NAME READY STATUS RESTARTS AGE nginx-65fc954674-2tc4v 1 /1 Running 0 15s nginx-65fc954674-fmqpf 1 /1 Running 0 15s nginx-65fc954674-ssz7x 1 /1 Running 0 15s","title":"\u521b\u5efa Deployment"},{"location":"k8s/objects/deployment/#_1","text":"","title":"\u6269\u5bb9"},{"location":"k8s/objects/deployment/#_2","text":"$ kubectl scale --replicas = 5 deploy/nginx","title":"\u624b\u52a8\u6269\u5bb9"},{"location":"k8s/objects/deployment/#_3","text":"\u53c2\u8003 HorizontalPodAutoscaler \u3002","title":"\u81ea\u52a8\u6269\u5bb9"},{"location":"k8s/objects/deployment/#_4","text":"","title":"\u6eda\u52a8\u5347\u7ea7"},{"location":"k8s/objects/deployment/#_5","text":"\u53ea\u6709\u5f53 Deployment \u4e2d Pod \u7684\u6a21\u677f\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u624d\u4f1a\u89e6\u53d1\u5347\u7ea7\uff0c\u5373 spec.template \u53d1\u751f\u53d8\u5316\u3002\u4f8b\u5982\u4fee\u6539\u955c\u50cf\u4e3a nginx:1.17.2 \uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.17.2 ports : - containerPort : 80 \u7136\u540e\u8fdb\u884c\u67e5\u770b\uff1a $ kubectl get deploy NAME DESIRED CURRENT UP-TO-DATE AVAILABLE AGE nginx 3 4 3 3 48s $ demo kubectl get rs NAME DESIRED CURRENT READY AGE nginx-56b7d6bcf7 3 3 3 10s nginx-65fc954674 0 0 0 51s $ demo kubectl get po NAME READY STATUS RESTARTS AGE nginx-56b7d6bcf7-2jhsm 1 /1 Running 0 11s nginx-56b7d6bcf7-dxkf5 1 /1 Running 0 15s nginx-56b7d6bcf7-q6jss 1 /1 Running 0 13s \u53ef\u4ee5\u770b\u5230\uff0c\u66f4\u65b0\u4e4b\u540e\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684 ReplicaSet\u3002 \u67e5\u770b\u5347\u7ea7\u72b6\u6001\uff1a $ kubectl rollout status deploy/nginx deployment \"nginx\" successfully rolled out \u67e5\u770b Deployment \u7684\u6eda\u52a8\u5347\u7ea7\u8be6\u60c5\uff1a $ kubectl describe deploy nginx ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal ScalingReplicaSet 3m deployment-controller Scaled up replica set nginx-65fc954674 to 3 Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-56b7d6bcf7 to 1 Normal ScalingReplicaSet 2m deployment-controller Scaled down replica set nginx-65fc954674 to 2 Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-56b7d6bcf7 to 2 Normal ScalingReplicaSet 2m deployment-controller Scaled down replica set nginx-65fc954674 to 1 Normal ScalingReplicaSet 2m deployment-controller Scaled up replica set nginx-56b7d6bcf7 to 3 Normal ScalingReplicaSet 2m deployment-controller Scaled down replica set nginx-65fc954674 to 0","title":"\u5347\u7ea7"},{"location":"k8s/objects/deployment/#_6","text":"$ kubectl rollout history deploy/nginx deployments \"nginx\" REVISION CHANGE-CAUSE 1 <none> 2 <none> $ kubectl rollout history deploy/nginx --revision = 2 deployments \"nginx\" with revision #2 Pod Template: Labels: app = nginx pod-template-hash = 1263826793 Containers: nginx: Image: nginx:1.17.2 Port: 80 /TCP Host Port: 0 /TCP Environment: <none> Mounts: <none> Volumes: <none> .spec.revisionHistoryLimit \u53ef\u4ee5\u8bbe\u7f6e\u4fdd\u7559\u591a\u5c11\u6b21\u5347\u7ea7\u5386\u53f2\uff0c\u9ed8\u8ba4\u4e3a 10\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a 0\uff0c\u5219\u4e0d\u4fdd\u7559\u4efb\u4f55\u5347\u7ea7\u5386\u53f2\uff0c\u56e0\u6b64\u4e5f\u5c31\u65e0\u6cd5\u6267\u884c\u56de\u6eda\u64cd\u4f5c\u3002","title":"\u5347\u7ea7\u5386\u53f2"},{"location":"k8s/objects/deployment/#_7","text":"\u4fee\u6539 YAML \u6587\u4ef6\u4e3a\u4e0a\u4e2a\u7248\u672c\uff0c\u91cd\u65b0 apply\uff0c\u53ef\u4ee5\u505a\u56de\u6eda\u64cd\u4f5c\uff1b\u6216\u8005 # \u56de\u6eda\u5230\u4e0a\u4e00\u7248\u672c $ kubectl rollout undo deploy/nginx # \u56de\u6eda\u5230\u6307\u5b9a\u7248\u672c $ kubectl rollout undo deploy/nginx --to-revision = 1","title":"\u56de\u6eda"},{"location":"k8s/objects/deployment/#_8","text":".spec.strategy \u53ef\u4ee5\u8bbe\u7f6e\u5347\u7ea7\u7b56\u7565\uff0c\u5176\u4e2d .spec.strategy.type \u53ef\u4ee5\u53d6\u503c\u4e3a\uff1a Recreate\uff1a\u4f1a\u76f4\u63a5 kill \u6389\u5df2\u6709 Pod\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa RollingUpdate\uff1a\u6eda\u52a8\u5347\u7ea7\uff0c\u9ed8\u8ba4\u7b56\u7565\u3002\u5982\u679c\u4e3a\u8be5\u7b56\u7565\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e maxUnavailable \u548c maxSurge \u6765\u63a7\u5236\u5347\u7ea7\u7684\u8fc7\u7a0b \u66f4\u591a\u8be6\u60c5\u53c2\u8003 Strategy \u3002","title":"\u5347\u7ea7\u7b56\u7565"},{"location":"k8s/objects/deployment/#_9","text":"Deployments","title":"\u53c2\u8003"},{"location":"k8s/objects/endpoints/","text":"Endpoints \u00b6 \u9ed8\u8ba4 Endpoints \u00b6 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5728\u521b\u5efa Service \u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa Endpoints\uff0c\u4f8b\u5982\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.17.2 ports : - containerPort : 80 --- apiVersion : v1 kind : Service metadata : name : nginx spec : type : ClusterIP selector : app : nginx ports : - port : 80 protocol : TCP targetPort : 80 \u67e5\u770b Service\uff1a $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP 10 .107.227.24 <none> 80 /TCP 2m \u67e5\u770b Pod\uff1a $ kubectl get po -owide NAME READY STATUS RESTARTS AGE IP NODE nginx-56b7d6bcf7-8pf6f 1 /1 Running 0 1m 10 .1.0.43 docker-for-desktop nginx-56b7d6bcf7-bl9vh 1 /1 Running 0 1m 10 .1.0.45 docker-for-desktop nginx-56b7d6bcf7-wl4qb 1 /1 Running 0 1m 10 .1.0.44 docker-for-desktop \u67e5\u770b Service\uff1a $ kubectl get endpoints NAME ENDPOINTS AGE nginx 10 .1.0.43:80,10.1.0.44:80,10.1.0.45:80 3m $ kubectl get endpoints nginx -oyaml apiVersion: v1 kind: Endpoints metadata: creationTimestamp: 2019 -08-14T15:09:13Z name: nginx namespace: default resourceVersion: \"670768\" selfLink: /api/v1/namespaces/default/endpoints/nginx uid: 7a0d276e-bea5-11e9-98fc-025000000001 subsets: - addresses: - ip: 10 .1.0.43 nodeName: docker-for-desktop targetRef: kind: Pod name: nginx-56b7d6bcf7-8pf6f namespace: default resourceVersion: \"670758\" uid: 7a11eab2-bea5-11e9-98fc-025000000001 - ip: 10 .1.0.44 nodeName: docker-for-desktop targetRef: kind: Pod name: nginx-56b7d6bcf7-wl4qb namespace: default resourceVersion: \"670761\" uid: 7a10580e-bea5-11e9-98fc-025000000001 - ip: 10 .1.0.45 nodeName: docker-for-desktop targetRef: kind: Pod name: nginx-56b7d6bcf7-bl9vh namespace: default resourceVersion: \"670766\" uid: 7a124e66-bea5-11e9-98fc-025000000001 ports: - port: 80 protocol: TCP \u53ef\u4ee5\u770b\u5230\uff0c\u9ed8\u8ba4\u7684 Endpoints \u5373\u4e3a\u6240\u9009\u4e2d\u7684 Pod \u7684\u96c6\u5408\u3002 \u81ea\u5b9a\u4e49 Endpoints \u00b6 \u5982\u679c Service \u6ca1\u6709\u5b9a\u4e49 Selector\uff0c\u90a3\u4e48\u5b83\u9ed8\u8ba4\u4e0d\u4f1a\u9009\u4e2d\u4efb\u4f55 Pod\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u81ea\u52a8\u521b\u5efa Endpoints\u3002\u53ef\u4ee5\u81ea\u5b9a\u4e49 Endpoints \u6765\u4f7f\u5f97 Service \u4f7f\u7528\u96c6\u7fa4\u5916\u90e8\u7684\u670d\u52a1\u3002\u4f8b\u5982\uff1a apiVersion : v1 kind : Service metadata : name : my-service spec : ports : - protocol : TCP port : 80 --- apiVersion : v1 kind : Endpoints metadata : name : my-service subsets : - addresses : - ip : 192.168.1.3 ports : - port : 9000 protocol : TCP \u751a\u81f3\u53ef\u4ee5\u6307\u5b9a\u591a\u7ec4 subsets \uff1a apiVersion : v1 kind : Service metadata : name : my-service spec : ports : - protocol : TCP port : 80 --- apiVersion : v1 kind : Endpoints metadata : name : my-service subsets : - addresses : - ip : 192.168.1.3 ports : - port : 9000 protocol : TCP - addresses : - ip : 192.168.1.3 ports : - port : 9001 protocol : TCP \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0cEndpoints \u7684 name \u548c Service \u7684 name \u5fc5\u987b\u4fdd\u6301\u4e00\u81f4\u3002","title":"Endpoints"},{"location":"k8s/objects/endpoints/#endpoints","text":"","title":"Endpoints"},{"location":"k8s/objects/endpoints/#endpoints_1","text":"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5728\u521b\u5efa Service \u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa Endpoints\uff0c\u4f8b\u5982\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.17.2 ports : - containerPort : 80 --- apiVersion : v1 kind : Service metadata : name : nginx spec : type : ClusterIP selector : app : nginx ports : - port : 80 protocol : TCP targetPort : 80 \u67e5\u770b Service\uff1a $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP 10 .107.227.24 <none> 80 /TCP 2m \u67e5\u770b Pod\uff1a $ kubectl get po -owide NAME READY STATUS RESTARTS AGE IP NODE nginx-56b7d6bcf7-8pf6f 1 /1 Running 0 1m 10 .1.0.43 docker-for-desktop nginx-56b7d6bcf7-bl9vh 1 /1 Running 0 1m 10 .1.0.45 docker-for-desktop nginx-56b7d6bcf7-wl4qb 1 /1 Running 0 1m 10 .1.0.44 docker-for-desktop \u67e5\u770b Service\uff1a $ kubectl get endpoints NAME ENDPOINTS AGE nginx 10 .1.0.43:80,10.1.0.44:80,10.1.0.45:80 3m $ kubectl get endpoints nginx -oyaml apiVersion: v1 kind: Endpoints metadata: creationTimestamp: 2019 -08-14T15:09:13Z name: nginx namespace: default resourceVersion: \"670768\" selfLink: /api/v1/namespaces/default/endpoints/nginx uid: 7a0d276e-bea5-11e9-98fc-025000000001 subsets: - addresses: - ip: 10 .1.0.43 nodeName: docker-for-desktop targetRef: kind: Pod name: nginx-56b7d6bcf7-8pf6f namespace: default resourceVersion: \"670758\" uid: 7a11eab2-bea5-11e9-98fc-025000000001 - ip: 10 .1.0.44 nodeName: docker-for-desktop targetRef: kind: Pod name: nginx-56b7d6bcf7-wl4qb namespace: default resourceVersion: \"670761\" uid: 7a10580e-bea5-11e9-98fc-025000000001 - ip: 10 .1.0.45 nodeName: docker-for-desktop targetRef: kind: Pod name: nginx-56b7d6bcf7-bl9vh namespace: default resourceVersion: \"670766\" uid: 7a124e66-bea5-11e9-98fc-025000000001 ports: - port: 80 protocol: TCP \u53ef\u4ee5\u770b\u5230\uff0c\u9ed8\u8ba4\u7684 Endpoints \u5373\u4e3a\u6240\u9009\u4e2d\u7684 Pod \u7684\u96c6\u5408\u3002","title":"\u9ed8\u8ba4 Endpoints"},{"location":"k8s/objects/endpoints/#endpoints_2","text":"\u5982\u679c Service \u6ca1\u6709\u5b9a\u4e49 Selector\uff0c\u90a3\u4e48\u5b83\u9ed8\u8ba4\u4e0d\u4f1a\u9009\u4e2d\u4efb\u4f55 Pod\uff0c\u4e5f\u5c31\u4e0d\u4f1a\u81ea\u52a8\u521b\u5efa Endpoints\u3002\u53ef\u4ee5\u81ea\u5b9a\u4e49 Endpoints \u6765\u4f7f\u5f97 Service \u4f7f\u7528\u96c6\u7fa4\u5916\u90e8\u7684\u670d\u52a1\u3002\u4f8b\u5982\uff1a apiVersion : v1 kind : Service metadata : name : my-service spec : ports : - protocol : TCP port : 80 --- apiVersion : v1 kind : Endpoints metadata : name : my-service subsets : - addresses : - ip : 192.168.1.3 ports : - port : 9000 protocol : TCP \u751a\u81f3\u53ef\u4ee5\u6307\u5b9a\u591a\u7ec4 subsets \uff1a apiVersion : v1 kind : Service metadata : name : my-service spec : ports : - protocol : TCP port : 80 --- apiVersion : v1 kind : Endpoints metadata : name : my-service subsets : - addresses : - ip : 192.168.1.3 ports : - port : 9000 protocol : TCP - addresses : - ip : 192.168.1.3 ports : - port : 9001 protocol : TCP \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0cEndpoints \u7684 name \u548c Service \u7684 name \u5fc5\u987b\u4fdd\u6301\u4e00\u81f4\u3002","title":"\u81ea\u5b9a\u4e49 Endpoints"},{"location":"k8s/objects/event/","text":"Event \u00b6 \u901a\u8fc7 kubectl get event \u53ef\u4ee5\u67e5\u770b\u4e8b\u4ef6\u4fe1\u606f\uff1a $ kubectl get event LAST SEEN TYPE REASON OBJECT MESSAGE 3m33s Warning FailedScheduling pod/nginx-66f9f9cfd5-2w97n 0 /1 nodes are available: 1 Insufficient cpu. 3m33s Warning FailedScheduling pod/nginx-66f9f9cfd5-7dzb8 0 /1 nodes are available: 1 Insufficient cpu. 3m33s Warning FailedScheduling pod/nginx-66f9f9cfd5-wn9ph 0 /1 nodes are available: 1 Insufficient cpu. \u4e5f\u53ef\u4ee5\u901a\u8fc7 -n, --namespace \u53c2\u6570\u6765\u67e5\u770b\u6307\u5b9a Namespace \u4e0b\u7684\u4e8b\u4ef6\u3002","title":"Event"},{"location":"k8s/objects/event/#event","text":"\u901a\u8fc7 kubectl get event \u53ef\u4ee5\u67e5\u770b\u4e8b\u4ef6\u4fe1\u606f\uff1a $ kubectl get event LAST SEEN TYPE REASON OBJECT MESSAGE 3m33s Warning FailedScheduling pod/nginx-66f9f9cfd5-2w97n 0 /1 nodes are available: 1 Insufficient cpu. 3m33s Warning FailedScheduling pod/nginx-66f9f9cfd5-7dzb8 0 /1 nodes are available: 1 Insufficient cpu. 3m33s Warning FailedScheduling pod/nginx-66f9f9cfd5-wn9ph 0 /1 nodes are available: 1 Insufficient cpu. \u4e5f\u53ef\u4ee5\u901a\u8fc7 -n, --namespace \u53c2\u6570\u6765\u67e5\u770b\u6307\u5b9a Namespace \u4e0b\u7684\u4e8b\u4ef6\u3002","title":"Event"},{"location":"k8s/objects/horizontal-pod-autoscaler/","text":"HorizontalPodAutoscaler \u00b6","title":"HorizontalPodAutoscaler"},{"location":"k8s/objects/horizontal-pod-autoscaler/#horizontalpodautoscaler","text":"","title":"HorizontalPodAutoscaler"},{"location":"k8s/objects/ingress/","text":"Ingress \u00b6 Ingress \u548c Ingress Controller \u00b6 Ingress \u53ef\u4ee5\u5c06\u96c6\u7fa4\u5185\u7684\u670d\u52a1\u5bf9\u5916\u66b4\u9732\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u8d1f\u8f7d\u5747\u8861\uff0cHTTPS\uff0c\u4ee5\u53ca\u57fa\u4e8e\u57df\u540d\u7684\u5206\u6d41\u652f\u6301\u3002Ingress \u672c\u8eab\u662f\u4e00\u79cd\u914d\u7f6e\uff0c\u914d\u7f6e\u4e86\u5982\u4f55\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u3002 \u5982\u679c\u9700\u8981 Ingress \u771f\u6b63\u751f\u6548\uff0c\u9700\u8981\u4f9d\u8d56\u4e8e Ingress Controller\u3002\u53ef\u4ee5\u7b80\u5355\u7c7b\u6bd4\u4e3a\uff0cIngress Controller \u5c31\u50cf\u662f Nginx\uff0c\u800c Ingress \u5219\u662f Nginx \u7684\u914d\u7f6e\u3002 \u5e38\u89c1\u7684 Ingress Controller \u6709\u591a\u79cd\uff0c\u4f8b\u5982 ingress-nginx \uff0c ambassador \u7b49\uff0c\u4f7f\u7528\u4e0d\u540c\u7684 Ingress Controller \u7684\u65f6\u5019\uff0cIngress \u7684\u914d\u7f6e\u4e5f\u4f1a\u6709\u6240\u5dee\u522b\u3002 \u8fd9\u91cc\u4ee5 ingress-nginx \u4e3a\u4f8b\u3002 \u5b89\u88c5 Ingress Controller \u00b6 $ helm install --name nginx --namespace ingress-nginx stable/nginx-ingress $ kubectl get all -n ingress-nginx NAME READY STATUS RESTARTS AGE pod/nginx-nginx-ingress-controller-7d9449d76c-v4cf9 1 /1 Running 0 30s pod/nginx-nginx-ingress-default-backend-7f79f9545-9px9f 1 /1 Running 0 30s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE service/nginx-nginx-ingress-controller LoadBalancer 10 .97.45.251 localhost 80 :30432/TCP,443:32760/TCP 30s service/nginx-nginx-ingress-default-backend ClusterIP 10 .108.182.134 <none> 80 /TCP 30s NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/nginx-nginx-ingress-controller 1 /1 1 1 30s deployment.apps/nginx-nginx-ingress-default-backend 1 /1 1 1 30s NAME DESIRED CURRENT READY AGE replicaset.apps/nginx-nginx-ingress-controller-7d9449d76c 1 1 1 30s replicaset.apps/nginx-nginx-ingress-default-backend-7f79f9545 1 1 1 30s \u521b\u5efa Ingress \u00b6 IP \u8bbf\u95ee \u00b6 apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx annotations : kubernetes.io/ingress.class : \"nginx\" spec : rules : - http : paths : - path : / backend : serviceName : nginx servicePort : 80 $ kubectl get ingress NAME HOSTS ADDRESS PORTS AGE nginx * 80 3s \u57df\u540d\u5206\u6d41 \u00b6 apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx annotations : kubernetes.io/ingress.class : \"nginx\" spec : rules : - host : nginx-example.com http : paths : - path : / backend : serviceName : nginx servicePort : 80 kubectl get ingress NAME HOSTS ADDRESS PORTS AGE nginx nginx-example.com 80 10s \u53c2\u8003 \u00b6 Ingress Ingress Controllers","title":"Ingress"},{"location":"k8s/objects/ingress/#ingress","text":"","title":"Ingress"},{"location":"k8s/objects/ingress/#ingress-ingress-controller","text":"Ingress \u53ef\u4ee5\u5c06\u96c6\u7fa4\u5185\u7684\u670d\u52a1\u5bf9\u5916\u66b4\u9732\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u8d1f\u8f7d\u5747\u8861\uff0cHTTPS\uff0c\u4ee5\u53ca\u57fa\u4e8e\u57df\u540d\u7684\u5206\u6d41\u652f\u6301\u3002Ingress \u672c\u8eab\u662f\u4e00\u79cd\u914d\u7f6e\uff0c\u914d\u7f6e\u4e86\u5982\u4f55\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u3002 \u5982\u679c\u9700\u8981 Ingress \u771f\u6b63\u751f\u6548\uff0c\u9700\u8981\u4f9d\u8d56\u4e8e Ingress Controller\u3002\u53ef\u4ee5\u7b80\u5355\u7c7b\u6bd4\u4e3a\uff0cIngress Controller \u5c31\u50cf\u662f Nginx\uff0c\u800c Ingress \u5219\u662f Nginx \u7684\u914d\u7f6e\u3002 \u5e38\u89c1\u7684 Ingress Controller \u6709\u591a\u79cd\uff0c\u4f8b\u5982 ingress-nginx \uff0c ambassador \u7b49\uff0c\u4f7f\u7528\u4e0d\u540c\u7684 Ingress Controller \u7684\u65f6\u5019\uff0cIngress \u7684\u914d\u7f6e\u4e5f\u4f1a\u6709\u6240\u5dee\u522b\u3002 \u8fd9\u91cc\u4ee5 ingress-nginx \u4e3a\u4f8b\u3002","title":"Ingress \u548c Ingress Controller"},{"location":"k8s/objects/ingress/#ingress-controller","text":"$ helm install --name nginx --namespace ingress-nginx stable/nginx-ingress $ kubectl get all -n ingress-nginx NAME READY STATUS RESTARTS AGE pod/nginx-nginx-ingress-controller-7d9449d76c-v4cf9 1 /1 Running 0 30s pod/nginx-nginx-ingress-default-backend-7f79f9545-9px9f 1 /1 Running 0 30s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE service/nginx-nginx-ingress-controller LoadBalancer 10 .97.45.251 localhost 80 :30432/TCP,443:32760/TCP 30s service/nginx-nginx-ingress-default-backend ClusterIP 10 .108.182.134 <none> 80 /TCP 30s NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/nginx-nginx-ingress-controller 1 /1 1 1 30s deployment.apps/nginx-nginx-ingress-default-backend 1 /1 1 1 30s NAME DESIRED CURRENT READY AGE replicaset.apps/nginx-nginx-ingress-controller-7d9449d76c 1 1 1 30s replicaset.apps/nginx-nginx-ingress-default-backend-7f79f9545 1 1 1 30s","title":"\u5b89\u88c5 Ingress Controller"},{"location":"k8s/objects/ingress/#ingress_1","text":"","title":"\u521b\u5efa Ingress"},{"location":"k8s/objects/ingress/#ip","text":"apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx annotations : kubernetes.io/ingress.class : \"nginx\" spec : rules : - http : paths : - path : / backend : serviceName : nginx servicePort : 80 $ kubectl get ingress NAME HOSTS ADDRESS PORTS AGE nginx * 80 3s","title":"IP \u8bbf\u95ee"},{"location":"k8s/objects/ingress/#_1","text":"apiVersion : networking.k8s.io/v1beta1 kind : Ingress metadata : name : nginx annotations : kubernetes.io/ingress.class : \"nginx\" spec : rules : - host : nginx-example.com http : paths : - path : / backend : serviceName : nginx servicePort : 80 kubectl get ingress NAME HOSTS ADDRESS PORTS AGE nginx nginx-example.com 80 10s","title":"\u57df\u540d\u5206\u6d41"},{"location":"k8s/objects/ingress/#_2","text":"Ingress Ingress Controllers","title":"\u53c2\u8003"},{"location":"k8s/objects/job/","text":"Job \u00b6 apiVersion : batch/v1 kind : Job metadata : name : pi spec : template : spec : containers : - name : pi image : perl command : [ \"perl\" , \"-Mbignum=bpi\" , \"-wle\" , \"print bpi(2000)\" ] restartPolicy : Never backoffLimit : 4 \u53c2\u8003 \u00b6 Jobs - Run to Completion","title":"Job"},{"location":"k8s/objects/job/#job","text":"apiVersion : batch/v1 kind : Job metadata : name : pi spec : template : spec : containers : - name : pi image : perl command : [ \"perl\" , \"-Mbignum=bpi\" , \"-wle\" , \"print bpi(2000)\" ] restartPolicy : Never backoffLimit : 4","title":"Job"},{"location":"k8s/objects/job/#_1","text":"Jobs - Run to Completion","title":"\u53c2\u8003"},{"location":"k8s/objects/namespace/","text":"Namespace \u00b6 \u7b80\u4ecb \u00b6 Namespace \u53ef\u4ee5\u5b9e\u73b0\u5bf9\u90e8\u5206\u8d44\u6e90\u7684\u9694\u79bb\uff0c\u4ece\u800c\u88ab\u4e0d\u540c\u7684\u7528\u6237\u6216\u7528\u6237\u7ec4\u4f7f\u7528\u3002\u4f8b\u5982 Deployment\uff0cPod\uff0cService \u7b49\u8d44\u6e90\u662f\u5c5e\u4e8e\u67d0\u4e00\u4e2a Namespace \u7684\uff0c\u800c Node\uff0cPersistent Volume \u7b49\u8d44\u6e90\u5219\u662f\u5168\u5c40\u7684\uff0c\u4e0d\u5c5e\u4e8e\u4efb\u4f55 Namespace\u3002 # \u67e5\u770b\u6240\u6709\u53ef\u4ee5 Namespace \u7ba1\u7406\u7684\u8d44\u6e90 $ kubectl api-resources --namespaced = true # \u67e5\u770b\u6240\u6709\u5168\u5c40\u7684\u8d44\u6e90 $ kubectl api-resources --namespaced = false \u64cd\u4f5c \u00b6 \u67e5\u770b \u00b6 \u53ef\u4ee5\u901a\u8fc7 kubectl get ns \u6765\u67e5\u770b\u6240\u6709\u7684 Namespace\uff1a $ kubectl get ns NAME STATUS AGE default Active 35d kube-public Active 35d kube-system Active 35d \u5176\u4e2d default \u662f\u9ed8\u8ba4\u7684 Namespace\uff0ck8s \u81ea\u8eab\u7684\u670d\u52a1\u5728 kube-system Namespace \u4e0b\u3002 \u7ba1\u7406 \u00b6 # \u521b\u5efa Namespace $ kubectl create ns test-namespace # \u5220\u9664 Namespace $ kubectl delete ns test-namespace kubectl \u547d\u4ee4\u901a\u8fc7 -n <namespace> \u9009\u9879\u53ef\u4ee5\u7ba1\u7406\u76f8\u5e94 Namespace \u4e0b\u7684\u8d44\u6e90\uff0c\u901a\u8fc7 --all-namespaces \u9009\u9879\u53ef\u4ee5\u7ba1\u7406\u6240\u6709 Namespace \u4e0b\u7684\u8d44\u6e90\u3002 \u53c2\u8003 \u00b6 Namespaces","title":"Namespace"},{"location":"k8s/objects/namespace/#namespace","text":"","title":"Namespace"},{"location":"k8s/objects/namespace/#_1","text":"Namespace \u53ef\u4ee5\u5b9e\u73b0\u5bf9\u90e8\u5206\u8d44\u6e90\u7684\u9694\u79bb\uff0c\u4ece\u800c\u88ab\u4e0d\u540c\u7684\u7528\u6237\u6216\u7528\u6237\u7ec4\u4f7f\u7528\u3002\u4f8b\u5982 Deployment\uff0cPod\uff0cService \u7b49\u8d44\u6e90\u662f\u5c5e\u4e8e\u67d0\u4e00\u4e2a Namespace \u7684\uff0c\u800c Node\uff0cPersistent Volume \u7b49\u8d44\u6e90\u5219\u662f\u5168\u5c40\u7684\uff0c\u4e0d\u5c5e\u4e8e\u4efb\u4f55 Namespace\u3002 # \u67e5\u770b\u6240\u6709\u53ef\u4ee5 Namespace \u7ba1\u7406\u7684\u8d44\u6e90 $ kubectl api-resources --namespaced = true # \u67e5\u770b\u6240\u6709\u5168\u5c40\u7684\u8d44\u6e90 $ kubectl api-resources --namespaced = false","title":"\u7b80\u4ecb"},{"location":"k8s/objects/namespace/#_2","text":"","title":"\u64cd\u4f5c"},{"location":"k8s/objects/namespace/#_3","text":"\u53ef\u4ee5\u901a\u8fc7 kubectl get ns \u6765\u67e5\u770b\u6240\u6709\u7684 Namespace\uff1a $ kubectl get ns NAME STATUS AGE default Active 35d kube-public Active 35d kube-system Active 35d \u5176\u4e2d default \u662f\u9ed8\u8ba4\u7684 Namespace\uff0ck8s \u81ea\u8eab\u7684\u670d\u52a1\u5728 kube-system Namespace \u4e0b\u3002","title":"\u67e5\u770b"},{"location":"k8s/objects/namespace/#_4","text":"# \u521b\u5efa Namespace $ kubectl create ns test-namespace # \u5220\u9664 Namespace $ kubectl delete ns test-namespace kubectl \u547d\u4ee4\u901a\u8fc7 -n <namespace> \u9009\u9879\u53ef\u4ee5\u7ba1\u7406\u76f8\u5e94 Namespace \u4e0b\u7684\u8d44\u6e90\uff0c\u901a\u8fc7 --all-namespaces \u9009\u9879\u53ef\u4ee5\u7ba1\u7406\u6240\u6709 Namespace \u4e0b\u7684\u8d44\u6e90\u3002","title":"\u7ba1\u7406"},{"location":"k8s/objects/namespace/#_5","text":"Namespaces","title":"\u53c2\u8003"},{"location":"k8s/objects/node/","text":"Node \u00b6 \u7b80\u4ecb \u00b6 \u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u53ef\u4ee5\u67e5\u770b\u96c6\u7fa4\u7684\u8282\u70b9\u4fe1\u606f\uff1a $ kubectl get node NAME STATUS ROLES AGE VERSION test-01 Ready master 38d v1.15.0 test-02 Ready <none> 38d v1.15.0 test-03 Ready <none> 38d v1.15.0 $ kubectl get node -owide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME test-01 Ready master 38d v1.15.0 10 .40.57.233 <none> Ubuntu 16 .04 LTS 4 .15.0-39-generic docker://18.6.1 test-02 Ready <none> 38d v1.15.0 10 .40.57.71 <none> Ubuntu 16 .04 LTS 4 .15.0-39-generic docker://18.6.1 test-03 Ready <none> 38d v1.15.0 10 .40.57.77 <none> Ubuntu 16 .04 LTS 4 .15.0-39-generic docker://18.6.1 Node \u9ed8\u8ba4\u6709\u5982\u4e0b\u6807\u7b7e\uff1a kubernetes.io/arch kubernetes.io/hostname kubernetes.io/os $ kubectl get node test-01 -oyaml apiVersion: v1 kind: Node metadata: labels: kubernetes.io/arch: amd64 kubernetes.io/hostname: test-01 kubernetes.io/os: linux node-role.kubernetes.io/master: \"\" name: test-01 spec: podCIDR: 10 .244.0.0/24 taints: - effect: NoSchedule key: node-role.kubernetes.io/master Taint \u00b6 \u8be6\u60c5\u53c2\u8003 Taints and Tolerations \u3002 Taint \u662f Node \u7684\u7279\u6027\uff0c\u4e00\u822c\u5305\u542b key \uff0c value \u548c effect \uff0c\u8868\u793a\u5f62\u5f0f\u4e3a key=value:effect \u3002\u53ef\u4ee5\u4e3a Node \u6253\u4e0a taint\uff0c\u4ee5\u53ca\u4e00\u5b9a\u7684\u526f\u4f5c\u7528\u3002\u901a\u8fc7 kubectl taint \u547d\u4ee4\u53ef\u4ee5\u4e3a Node \u6dfb\u52a0\u6216\u8005\u5220\u9664 taint\uff0c\u4f8b\u5982\uff1a # \u6dfb\u52a0 taint $ kubectl taint node node-01 dedicated = special-user:NoSchedule # \u5220\u9664 taint $ kubectl taint node node-01 dedicated:NoSchedule- \u5728\u4e0a\u4e00\u90e8\u5206\u7684\u4f8b\u5b50\u4e2d\uff0cmaster \u8282\u70b9\u9ed8\u8ba4 taint \u5982\u4e0b\uff1a spec : taints : - effect : NoSchedule key : node-role.kubernetes.io/master \u901a\u5e38\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmaster \u8282\u70b9\u662f\u4e0d\u5141\u8bb8\u8c03\u5ea6 Pod \u7684\uff0c\u5982\u679c\u5e0c\u671b master \u8282\u70b9\u4e5f\u53ef\u4ee5\u8c03\u5ea6 Pod\uff0c\u53ef\u4ee5\u6267\u884c\uff1a kubectl taint nodes --all node-role.kubernetes.io/master- effect \u7684\u53d6\u503c\u4e3a\uff1a NoSchedule \uff1a\u7981\u6b62\u8c03\u5ea6 PreferNoSchedule \uff1a\u4f18\u5148\u4e0d\u8c03\u5ea6 NoExecute \uff1a\u4e0d\u8c03\u5ea6\u5230\u8be5\u8282\u70b9\uff0c\u540c\u65f6\u4f1a\u9a71\u9010\u5df2\u7ecf\u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u7684 Pod \u7ba1\u7406 \u00b6 cordon / uncordon \u00b6 cordon \u5c06\u8282\u70b9\u6807\u8bb0\u4e3a\u4e0d\u53ef\u8c03\u5ea6\uff1b uncordon \u5c06\u8282\u70b9\u91cd\u65b0\u6807\u8bb0\u4e3a\u53ef\u8c03\u5ea6\u3002 $ kubectl cordon test-03 NAME STATUS ROLES AGE VERSION test-01 Ready master 45d v1.15.0 test-02 Ready <none> 45d v1.15.0 test-03 Ready,SchedulingDisabled <none> 45d v1.15.0 drain \u00b6 \u5982\u679c\u9700\u8981\u5c06\u4e00\u4e2a Node \u4ece\u96c6\u7fa4\u4e2d\u79fb\u9664\uff0c\u5219\u9700\u8981\u5148\u6267\u884c kubectl drain <node name> \u64cd\u4f5c\u3002\u8be5\u64cd\u4f5c\u4f1a\uff1a \u6807\u8bb0\u8be5 Node \u4e3a\u4e0d\u53ef\u8c03\u5ea6 ( kubectl cordon <node name> ) \u9a71\u9010\u8be5 Node \u4e0a\u7684 Pod \u901a\u8fc7 --ignore-daemonsets \u53ef\u4ee5\u5ffd\u7565 DaemonSet\uff1b\u5982\u679c\u6709 Pod \u4f7f\u7528\u672c\u5730\u5b58\u50a8\uff0c\u4f8b\u5982 emptyDir \uff0c\u53ef\u4ee5\u4f7f\u7528 --delete-local-data \u53c2\u6570\u3002 drain \u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u5373\u53ef\u5c06 Node \u4ece\u96c6\u7fa4\u4e2d\u79fb\u9664\u3002\u5982\u679c\u60f3\u8981 Node \u7ee7\u7eed\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7 kubectl uncordon <node name> . \u8be5\u64cd\u4f5c\u5728\u9a71\u9010 Pod \u7684\u65f6\u5019\uff0c\u4f1a\u9075\u5faa PodDisruptionBudget \u53c2\u8003 \u00b6 Nodes Taints and Tolerations Safely Drain a Node while Respecting the PodDisruptionBudget","title":"Node"},{"location":"k8s/objects/node/#node","text":"","title":"Node"},{"location":"k8s/objects/node/#_1","text":"\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u53ef\u4ee5\u67e5\u770b\u96c6\u7fa4\u7684\u8282\u70b9\u4fe1\u606f\uff1a $ kubectl get node NAME STATUS ROLES AGE VERSION test-01 Ready master 38d v1.15.0 test-02 Ready <none> 38d v1.15.0 test-03 Ready <none> 38d v1.15.0 $ kubectl get node -owide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME test-01 Ready master 38d v1.15.0 10 .40.57.233 <none> Ubuntu 16 .04 LTS 4 .15.0-39-generic docker://18.6.1 test-02 Ready <none> 38d v1.15.0 10 .40.57.71 <none> Ubuntu 16 .04 LTS 4 .15.0-39-generic docker://18.6.1 test-03 Ready <none> 38d v1.15.0 10 .40.57.77 <none> Ubuntu 16 .04 LTS 4 .15.0-39-generic docker://18.6.1 Node \u9ed8\u8ba4\u6709\u5982\u4e0b\u6807\u7b7e\uff1a kubernetes.io/arch kubernetes.io/hostname kubernetes.io/os $ kubectl get node test-01 -oyaml apiVersion: v1 kind: Node metadata: labels: kubernetes.io/arch: amd64 kubernetes.io/hostname: test-01 kubernetes.io/os: linux node-role.kubernetes.io/master: \"\" name: test-01 spec: podCIDR: 10 .244.0.0/24 taints: - effect: NoSchedule key: node-role.kubernetes.io/master","title":"\u7b80\u4ecb"},{"location":"k8s/objects/node/#taint","text":"\u8be6\u60c5\u53c2\u8003 Taints and Tolerations \u3002 Taint \u662f Node \u7684\u7279\u6027\uff0c\u4e00\u822c\u5305\u542b key \uff0c value \u548c effect \uff0c\u8868\u793a\u5f62\u5f0f\u4e3a key=value:effect \u3002\u53ef\u4ee5\u4e3a Node \u6253\u4e0a taint\uff0c\u4ee5\u53ca\u4e00\u5b9a\u7684\u526f\u4f5c\u7528\u3002\u901a\u8fc7 kubectl taint \u547d\u4ee4\u53ef\u4ee5\u4e3a Node \u6dfb\u52a0\u6216\u8005\u5220\u9664 taint\uff0c\u4f8b\u5982\uff1a # \u6dfb\u52a0 taint $ kubectl taint node node-01 dedicated = special-user:NoSchedule # \u5220\u9664 taint $ kubectl taint node node-01 dedicated:NoSchedule- \u5728\u4e0a\u4e00\u90e8\u5206\u7684\u4f8b\u5b50\u4e2d\uff0cmaster \u8282\u70b9\u9ed8\u8ba4 taint \u5982\u4e0b\uff1a spec : taints : - effect : NoSchedule key : node-role.kubernetes.io/master \u901a\u5e38\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cmaster \u8282\u70b9\u662f\u4e0d\u5141\u8bb8\u8c03\u5ea6 Pod \u7684\uff0c\u5982\u679c\u5e0c\u671b master \u8282\u70b9\u4e5f\u53ef\u4ee5\u8c03\u5ea6 Pod\uff0c\u53ef\u4ee5\u6267\u884c\uff1a kubectl taint nodes --all node-role.kubernetes.io/master- effect \u7684\u53d6\u503c\u4e3a\uff1a NoSchedule \uff1a\u7981\u6b62\u8c03\u5ea6 PreferNoSchedule \uff1a\u4f18\u5148\u4e0d\u8c03\u5ea6 NoExecute \uff1a\u4e0d\u8c03\u5ea6\u5230\u8be5\u8282\u70b9\uff0c\u540c\u65f6\u4f1a\u9a71\u9010\u5df2\u7ecf\u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u7684 Pod","title":"Taint"},{"location":"k8s/objects/node/#_2","text":"","title":"\u7ba1\u7406"},{"location":"k8s/objects/node/#cordon-uncordon","text":"cordon \u5c06\u8282\u70b9\u6807\u8bb0\u4e3a\u4e0d\u53ef\u8c03\u5ea6\uff1b uncordon \u5c06\u8282\u70b9\u91cd\u65b0\u6807\u8bb0\u4e3a\u53ef\u8c03\u5ea6\u3002 $ kubectl cordon test-03 NAME STATUS ROLES AGE VERSION test-01 Ready master 45d v1.15.0 test-02 Ready <none> 45d v1.15.0 test-03 Ready,SchedulingDisabled <none> 45d v1.15.0","title":"cordon / uncordon"},{"location":"k8s/objects/node/#drain","text":"\u5982\u679c\u9700\u8981\u5c06\u4e00\u4e2a Node \u4ece\u96c6\u7fa4\u4e2d\u79fb\u9664\uff0c\u5219\u9700\u8981\u5148\u6267\u884c kubectl drain <node name> \u64cd\u4f5c\u3002\u8be5\u64cd\u4f5c\u4f1a\uff1a \u6807\u8bb0\u8be5 Node \u4e3a\u4e0d\u53ef\u8c03\u5ea6 ( kubectl cordon <node name> ) \u9a71\u9010\u8be5 Node \u4e0a\u7684 Pod \u901a\u8fc7 --ignore-daemonsets \u53ef\u4ee5\u5ffd\u7565 DaemonSet\uff1b\u5982\u679c\u6709 Pod \u4f7f\u7528\u672c\u5730\u5b58\u50a8\uff0c\u4f8b\u5982 emptyDir \uff0c\u53ef\u4ee5\u4f7f\u7528 --delete-local-data \u53c2\u6570\u3002 drain \u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u5373\u53ef\u5c06 Node \u4ece\u96c6\u7fa4\u4e2d\u79fb\u9664\u3002\u5982\u679c\u60f3\u8981 Node \u7ee7\u7eed\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7 kubectl uncordon <node name> . \u8be5\u64cd\u4f5c\u5728\u9a71\u9010 Pod \u7684\u65f6\u5019\uff0c\u4f1a\u9075\u5faa PodDisruptionBudget","title":"drain"},{"location":"k8s/objects/node/#_3","text":"Nodes Taints and Tolerations Safely Drain a Node while Respecting the PodDisruptionBudget","title":"\u53c2\u8003"},{"location":"k8s/objects/persistent-volume-claim/","text":"PersistentVolumeClaim \u00b6","title":"PersistentVolumeClaim"},{"location":"k8s/objects/persistent-volume-claim/#persistentvolumeclaim","text":"","title":"PersistentVolumeClaim"},{"location":"k8s/objects/persistent-volume/","text":"Persistent Volume \u00b6 Volume \u00b6 \u4ee5\u4e0b\u5217\u51fa\u51e0\u79cd\u57fa\u7840\u4e14\u5e38\u7528\u7684 Volume\u3002\u66f4\u591a\u8be6\u60c5\u53c2\u8003 Volumes \u3002 configMap \u00b6 \u53c2\u8003 ConfigMap \u3002 secret \u00b6 \u53c2\u8003 Secret \u3002 downwardAPI \u00b6 downwardAPI \u53ef\u4ee5\u5c06 Pod \u6216 Container \u7684\u5b57\u6bb5\u4f5c\u4e3a Volume \u6765\u4f7f\u7528\uff0c\u4ece\u800c\u53ef\u4ee5\u8ba9\u8fd0\u884c\u7684\u5bb9\u5668\u6765\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\u3002\u66f4\u591a\u8be6\u60c5\u53ef\u53c2\u8003 Expose Pod Information to Containers Through Files \u3002 apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx annotations : app-owner : alex spec : containers : - name : nginx image : nginx:1.16 resources : requests : cpu : \"100m\" memory : \"32Mi\" volumeMounts : - name : podinfo mountPath : /etc/podinfo volumes : - name : podinfo downwardAPI : items : - path : labels fieldRef : fieldPath : metadata.labels - path : annotations fieldRef : fieldPath : metadata.annotations - path : cpu_request resourceFieldRef : containerName : nginx resource : requests.cpu divisor : 1m - path : mem_request resourceFieldRef : containerName : nginx resource : requests.memory divisor : 1Mi emptyDir \u00b6 emptyDir \u5728 Pod \u88ab\u8c03\u5ea6\u5230 Node \u4e0a\u7684\u65f6\u5019\u521b\u5efa\uff0c\u521d\u59cb\u4e3a\u7a7a\u76ee\u5f55\uff0c\u5e76\u4e14\u5b58\u5728\u4e8e Pod \u7684\u751f\u547d\u5468\u671f\u5185\u3002\u5f53 Pod \u4ece Node \u4e0a\u79fb\u9664\u540e\uff0cemptyDir \u4f1a\u88ab\u6c38\u4e45\u5220\u9664\u3002\u4e3b\u8981\u9002\u7528\u4e8e\u5b58\u653e\u4e00\u4e9b\u4e34\u65f6\u6587\u4ef6\uff0c\u800c\u975e\u6301\u4e45\u5316\u7684\u6570\u636e\u3002 \u4f8b\u5982\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : data mountPath : /data volumes : - name : data emptyDir : {} \u901a\u5e38\u6765\u8bf4\uff0cemptyDir \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u5b58\u50a8\u4ecb\u8d28\uff0c\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e emptyDir.menium: Memory \u6765\u4f7f\u7528 tmpfs\uff08\u57fa\u4e8e\u5185\u5b58\uff09\u3002 hostPath \u00b6 \u53ef\u4ee5\u5c06 Node \u4e0a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u6302\u8f7d\u5230 Pod \u4e2d\u3002\u901a\u5e38\u9700\u8981\u5c06\u4e00\u4e9b\u7cfb\u7edf\u6587\u4ef6\u6302\u8f7d\u5230 Pod \u5185\u90e8\u65f6\u4f1a\u7528\u5230\u3002\u5728\u4f7f\u7528 hostPath \u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f Pod \u88ab\u5220\u9664\uff0chostPath \u7684\u6587\u4ef6\u4f9d\u7136\u5b58\u5728\u3002 \u4f8b\u5982\u4ee5\u4e0b\u4f8b\u5b50\u53ef\u4ee5\u8ba9 Pod \u5185\u4f7f\u7528\u5f53\u5730\u65f6\u95f4\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : timezone mountPath : /ect/timezone - name : localtime mountPath : /etc/localtime volumes : - name : timezone hostPath : path : /etc/timezone - name : localtime hostPath : path : /etc/localtime hostPath \u9664\u4e86\u5fc5\u9700\u7684 path \u5c5e\u6027\u5916\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e type \u5c5e\u6027\uff0c\u8be6\u7ec6\u53ef\u53c2\u8003 emptyDir \u3002 local \u00b6 local Volume \u8868\u793a\u4e00\u4e2a\u78c1\u76d8\uff0c\u5206\u533a\u6216\u8005\u4e00\u4e2a\u76ee\u5f55\u3002\u53ea\u80fd\u7528\u4e8e static provisioning\uff0c\u4e0d\u652f\u6301 dynamic provisioning\uff08\u53c2\u8003 Provisioning \uff09\u3002\u9700\u8981\u7ed3\u5408 nodeAffinity \u7279\u6027\u6765\u4f7f\u7528\uff0c\u56e0\u6b64\u76f8\u6bd4\u4e8e hostPath \u65b9\u5f0f\uff0c\u4e0d\u7528\u624b\u52a8\u6307\u5b9a Pod \u6240\u5e94\u8be5\u88ab\u8c03\u5ea6\u7684 Node\u3002 apiVersion : v1 kind : PersistentVolume metadata : name : local-pv spec : capacity : storage : 10Gi volumeMode : Filesystem accessModes : - ReadWriteOnce persistentVolumeReclaimPolicy : Delete storageClassName : local-storage local : path : /opt/local-pv nodeAffinity : required : nodeSelectorTerms : - matchExpressions : - key : kubernetes.io/hostname operator : In values : - test-03 --- apiVersion : v1 kind : PersistentVolumeClaim metadata : name : nginx-pvc spec : accessModes : - ReadWriteOnce resources : requests : storage : 1Gi storageClassName : local-storage --- apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.17.2 ports : - containerPort : 80 volumeMounts : - name : test mountPath : /opt/data volumes : - name : test persistentVolumeClaim : claimName : nginx-pvc \u6b64\u5916\uff0cRancher \u63d0\u4f9b\u7684 local-path-provisioner \u4e0e local \u6bd4\u8f83\u7c7b\u4f3c\uff0c\u4f46\u662f\u652f\u6301 dynamic provisioning. persistentVolumeClaim \u00b6 \u53c2\u8003 Persistent Volume Claim \u3002 projected \u00b6 \u4e00\u822c\u800c\u8a00\uff0c\u591a\u4e2a Volume \u4e0d\u80fd\u591f\u6302\u8f7d\u5230\u540c\u4e00\u4e2a MoutPath\uff0c\u4f8b\u5982\u5982\u4e0b\u5c31\u4f1a\u62a5\u9519\uff1a apiVersion : v1 kind : ConfigMap metadata : name : mysql-conf data : mysql-host : mysql.middlewares.svc.cluster.local --- apiVersion : v1 kind : Secret metadata : name : mysql-secret data : mysql-pass : cm9vdA== --- apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : mysql-conf mountPath : /ect/mysql - name : mysql-secret mountPath : /etc/mysql volumes : - name : mysql-conf configMap : name : mysql-conf - name : mysql-secret secret : secretName : mysql-secret \u53ef\u4ee5\u4f7f\u7528 subPath \u7684\u65b9\u5f0f\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : mysql-conf mountPath : /etc/mysql/mysql-host subPath : mysql-host - name : mysql-secret mountPath : /etc/mysql/mysql-pass subPath : mysql-pass volumes : - name : mysql-conf configMap : name : mysql-conf - name : mysql-secret secret : secretName : mysql-secret \u4e5f\u53ef\u4ee5\u4f7f\u7528 projected Volume\uff0c\u4f8b\u5982\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : mysql mountPath : /etc/mysql volumes : - name : mysql projected : sources : - configMap : name : mysql-conf - secret : name : mysql-secret projected Volume \u652f\u6301\uff1a secret configMap downwardAPI serviceAccountToken \u751f\u547d\u5468\u671f \u00b6 Provisioning \u00b6 Binding \u00b6 Using \u00b6 \u53c2\u8003 \u00b6 Volumes Persistent Volumes","title":"PersistentVolume"},{"location":"k8s/objects/persistent-volume/#persistent-volume","text":"","title":"Persistent Volume"},{"location":"k8s/objects/persistent-volume/#volume","text":"\u4ee5\u4e0b\u5217\u51fa\u51e0\u79cd\u57fa\u7840\u4e14\u5e38\u7528\u7684 Volume\u3002\u66f4\u591a\u8be6\u60c5\u53c2\u8003 Volumes \u3002","title":"Volume"},{"location":"k8s/objects/persistent-volume/#configmap","text":"\u53c2\u8003 ConfigMap \u3002","title":"configMap"},{"location":"k8s/objects/persistent-volume/#secret","text":"\u53c2\u8003 Secret \u3002","title":"secret"},{"location":"k8s/objects/persistent-volume/#downwardapi","text":"downwardAPI \u53ef\u4ee5\u5c06 Pod \u6216 Container \u7684\u5b57\u6bb5\u4f5c\u4e3a Volume \u6765\u4f7f\u7528\uff0c\u4ece\u800c\u53ef\u4ee5\u8ba9\u8fd0\u884c\u7684\u5bb9\u5668\u6765\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\u3002\u66f4\u591a\u8be6\u60c5\u53ef\u53c2\u8003 Expose Pod Information to Containers Through Files \u3002 apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx annotations : app-owner : alex spec : containers : - name : nginx image : nginx:1.16 resources : requests : cpu : \"100m\" memory : \"32Mi\" volumeMounts : - name : podinfo mountPath : /etc/podinfo volumes : - name : podinfo downwardAPI : items : - path : labels fieldRef : fieldPath : metadata.labels - path : annotations fieldRef : fieldPath : metadata.annotations - path : cpu_request resourceFieldRef : containerName : nginx resource : requests.cpu divisor : 1m - path : mem_request resourceFieldRef : containerName : nginx resource : requests.memory divisor : 1Mi","title":"downwardAPI"},{"location":"k8s/objects/persistent-volume/#emptydir","text":"emptyDir \u5728 Pod \u88ab\u8c03\u5ea6\u5230 Node \u4e0a\u7684\u65f6\u5019\u521b\u5efa\uff0c\u521d\u59cb\u4e3a\u7a7a\u76ee\u5f55\uff0c\u5e76\u4e14\u5b58\u5728\u4e8e Pod \u7684\u751f\u547d\u5468\u671f\u5185\u3002\u5f53 Pod \u4ece Node \u4e0a\u79fb\u9664\u540e\uff0cemptyDir \u4f1a\u88ab\u6c38\u4e45\u5220\u9664\u3002\u4e3b\u8981\u9002\u7528\u4e8e\u5b58\u653e\u4e00\u4e9b\u4e34\u65f6\u6587\u4ef6\uff0c\u800c\u975e\u6301\u4e45\u5316\u7684\u6570\u636e\u3002 \u4f8b\u5982\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : data mountPath : /data volumes : - name : data emptyDir : {} \u901a\u5e38\u6765\u8bf4\uff0cemptyDir \u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u5b58\u50a8\u4ecb\u8d28\uff0c\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e emptyDir.menium: Memory \u6765\u4f7f\u7528 tmpfs\uff08\u57fa\u4e8e\u5185\u5b58\uff09\u3002","title":"emptyDir"},{"location":"k8s/objects/persistent-volume/#hostpath","text":"\u53ef\u4ee5\u5c06 Node \u4e0a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u6302\u8f7d\u5230 Pod \u4e2d\u3002\u901a\u5e38\u9700\u8981\u5c06\u4e00\u4e9b\u7cfb\u7edf\u6587\u4ef6\u6302\u8f7d\u5230 Pod \u5185\u90e8\u65f6\u4f1a\u7528\u5230\u3002\u5728\u4f7f\u7528 hostPath \u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f Pod \u88ab\u5220\u9664\uff0chostPath \u7684\u6587\u4ef6\u4f9d\u7136\u5b58\u5728\u3002 \u4f8b\u5982\u4ee5\u4e0b\u4f8b\u5b50\u53ef\u4ee5\u8ba9 Pod \u5185\u4f7f\u7528\u5f53\u5730\u65f6\u95f4\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : timezone mountPath : /ect/timezone - name : localtime mountPath : /etc/localtime volumes : - name : timezone hostPath : path : /etc/timezone - name : localtime hostPath : path : /etc/localtime hostPath \u9664\u4e86\u5fc5\u9700\u7684 path \u5c5e\u6027\u5916\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e type \u5c5e\u6027\uff0c\u8be6\u7ec6\u53ef\u53c2\u8003 emptyDir \u3002","title":"hostPath"},{"location":"k8s/objects/persistent-volume/#local","text":"local Volume \u8868\u793a\u4e00\u4e2a\u78c1\u76d8\uff0c\u5206\u533a\u6216\u8005\u4e00\u4e2a\u76ee\u5f55\u3002\u53ea\u80fd\u7528\u4e8e static provisioning\uff0c\u4e0d\u652f\u6301 dynamic provisioning\uff08\u53c2\u8003 Provisioning \uff09\u3002\u9700\u8981\u7ed3\u5408 nodeAffinity \u7279\u6027\u6765\u4f7f\u7528\uff0c\u56e0\u6b64\u76f8\u6bd4\u4e8e hostPath \u65b9\u5f0f\uff0c\u4e0d\u7528\u624b\u52a8\u6307\u5b9a Pod \u6240\u5e94\u8be5\u88ab\u8c03\u5ea6\u7684 Node\u3002 apiVersion : v1 kind : PersistentVolume metadata : name : local-pv spec : capacity : storage : 10Gi volumeMode : Filesystem accessModes : - ReadWriteOnce persistentVolumeReclaimPolicy : Delete storageClassName : local-storage local : path : /opt/local-pv nodeAffinity : required : nodeSelectorTerms : - matchExpressions : - key : kubernetes.io/hostname operator : In values : - test-03 --- apiVersion : v1 kind : PersistentVolumeClaim metadata : name : nginx-pvc spec : accessModes : - ReadWriteOnce resources : requests : storage : 1Gi storageClassName : local-storage --- apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.17.2 ports : - containerPort : 80 volumeMounts : - name : test mountPath : /opt/data volumes : - name : test persistentVolumeClaim : claimName : nginx-pvc \u6b64\u5916\uff0cRancher \u63d0\u4f9b\u7684 local-path-provisioner \u4e0e local \u6bd4\u8f83\u7c7b\u4f3c\uff0c\u4f46\u662f\u652f\u6301 dynamic provisioning.","title":"local"},{"location":"k8s/objects/persistent-volume/#persistentvolumeclaim","text":"\u53c2\u8003 Persistent Volume Claim \u3002","title":"persistentVolumeClaim"},{"location":"k8s/objects/persistent-volume/#projected","text":"\u4e00\u822c\u800c\u8a00\uff0c\u591a\u4e2a Volume \u4e0d\u80fd\u591f\u6302\u8f7d\u5230\u540c\u4e00\u4e2a MoutPath\uff0c\u4f8b\u5982\u5982\u4e0b\u5c31\u4f1a\u62a5\u9519\uff1a apiVersion : v1 kind : ConfigMap metadata : name : mysql-conf data : mysql-host : mysql.middlewares.svc.cluster.local --- apiVersion : v1 kind : Secret metadata : name : mysql-secret data : mysql-pass : cm9vdA== --- apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : mysql-conf mountPath : /ect/mysql - name : mysql-secret mountPath : /etc/mysql volumes : - name : mysql-conf configMap : name : mysql-conf - name : mysql-secret secret : secretName : mysql-secret \u53ef\u4ee5\u4f7f\u7528 subPath \u7684\u65b9\u5f0f\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : mysql-conf mountPath : /etc/mysql/mysql-host subPath : mysql-host - name : mysql-secret mountPath : /etc/mysql/mysql-pass subPath : mysql-pass volumes : - name : mysql-conf configMap : name : mysql-conf - name : mysql-secret secret : secretName : mysql-secret \u4e5f\u53ef\u4ee5\u4f7f\u7528 projected Volume\uff0c\u4f8b\u5982\uff1a apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : replicas : 1 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.16 volumeMounts : - name : mysql mountPath : /etc/mysql volumes : - name : mysql projected : sources : - configMap : name : mysql-conf - secret : name : mysql-secret projected Volume \u652f\u6301\uff1a secret configMap downwardAPI serviceAccountToken","title":"projected"},{"location":"k8s/objects/persistent-volume/#_1","text":"","title":"\u751f\u547d\u5468\u671f"},{"location":"k8s/objects/persistent-volume/#provisioning","text":"","title":"Provisioning"},{"location":"k8s/objects/persistent-volume/#binding","text":"","title":"Binding"},{"location":"k8s/objects/persistent-volume/#using","text":"","title":"Using"},{"location":"k8s/objects/persistent-volume/#_2","text":"Volumes Persistent Volumes","title":"\u53c2\u8003"},{"location":"k8s/objects/pod-disruption-budget/","text":"PodDisruptionBudget \u00b6 \u7b80\u4ecb \u00b6 \u5728\u6267\u884c kubectl drain <node name> \u7684\u65f6\u5019\uff0c\u4f1a\u9075\u5faa\u8be5\u7b56\u7565\u53bb\u9a71\u9010 Pod\u3002 \u53ef\u4ee5\u8bbe\u7f6e minAvailable \u6216\u8005 maxUnavailable \uff0c\u53ef\u4ee5\u662f\u5177\u4f53\u7684\u6570\u5b57\uff0c\u4e5f\u53ef\u4ee5\u662f\u767e\u5206\u6bd4\u3002 apiVersion : policy/v1beta1 kind : PodDisruptionBudget metadata : name : zk-pdb spec : minAvailable : 2 selector : matchLabels : app : zookeeper apiVersion : policy/v1beta1 kind : PodDisruptionBudget metadata : name : zk-pdb spec : maxUnavailable : 1 selector : matchLabels : app : zookeeper \u53c2\u8003 \u00b6 Disruptions Specifying a Disruption Budget for your Application","title":"PodDisruptionBudget"},{"location":"k8s/objects/pod-disruption-budget/#poddisruptionbudget","text":"","title":"PodDisruptionBudget"},{"location":"k8s/objects/pod-disruption-budget/#_1","text":"\u5728\u6267\u884c kubectl drain <node name> \u7684\u65f6\u5019\uff0c\u4f1a\u9075\u5faa\u8be5\u7b56\u7565\u53bb\u9a71\u9010 Pod\u3002 \u53ef\u4ee5\u8bbe\u7f6e minAvailable \u6216\u8005 maxUnavailable \uff0c\u53ef\u4ee5\u662f\u5177\u4f53\u7684\u6570\u5b57\uff0c\u4e5f\u53ef\u4ee5\u662f\u767e\u5206\u6bd4\u3002 apiVersion : policy/v1beta1 kind : PodDisruptionBudget metadata : name : zk-pdb spec : minAvailable : 2 selector : matchLabels : app : zookeeper apiVersion : policy/v1beta1 kind : PodDisruptionBudget metadata : name : zk-pdb spec : maxUnavailable : 1 selector : matchLabels : app : zookeeper","title":"\u7b80\u4ecb"},{"location":"k8s/objects/pod-disruption-budget/#_2","text":"Disruptions Specifying a Disruption Budget for your Application","title":"\u53c2\u8003"},{"location":"k8s/objects/pod/","text":"Pod \u00b6 \u7b80\u4ecb \u00b6 Pod \u662f k8s \u4e2d\u6700\u5c0f\u7684\u6267\u884c\u5355\u5143\uff0c\u662f\u5bf9\u5bb9\u5668\u7684\u4e00\u5c42\u5305\u88c5\uff0c\u6bcf\u4e2a Pod \u5185\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668 Pod \u5185\u7684\u5bb9\u5668\u5171\u4eab\u7f51\u7edc\u548c\u5b58\u50a8\uff0c\u4e92\u76f8\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7 localhost \u6765\u8fdb\u884c\u901a\u4fe1 Pod\u662f\u975e\u6301\u4e45\u7684\u3001\u4e00\u6b21\u6027\u7684 (ephemeral, disposable) Pod \u4e0d\u4f1a\u81ea\u6108\uff0c\u5f53\u4e00\u4e2a Pod \u5931\u8d25\u540e\uff0c\u4f1a\u88ab\u5220\u9664 Controller\uff08\u4f8b\u5982 Deployment\uff0cStatefulSet\uff0cDaemonSet\uff09\u7528\u4e8e\u7ba1\u7406 Pod\uff0c\u5bf9 Pod \u8fdb\u884c\u8c03\u5ea6\uff0c\u526f\u672c\u7ba1\u7406\uff0c\u6eda\u52a8\u5347\u7ea7\u7b49 \u5f88\u5c11\u76f4\u63a5\u4f7f\u7528 Pod\uff0c\u4e00\u822c\u90fd\u662f\u901a\u8fc7 Controller \u6765\u4f7f\u7528 Pod template \u4e5f\u901a\u5e38\u4e0d\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u662f\u653e\u5728 Controller template \u91cc Pod \u751f\u547d\u5468\u671f \u00b6 Status \u00b6 Pending \uff1a\u5c1a\u672a\u8c03\u5ea6\uff0c\u955c\u50cf\u5728\u4e0b\u8f7d\u4e2d\uff0c\u6216\u8005\u627e\u4e0d\u5230\u5408\u9002\u7684\u8c03\u5ea6\u8282\u70b9 Running \uff1a\u88ab\u8c03\u5ea6\u5230\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u5176\u4e2d\u81f3\u5c11\u4e00\u4e2a\u5bb9\u5668\u8fd8\u5728\u8fd0\u884c\u4e2d\uff0c\u542f\u52a8\u4e2d\u6216\u8005\u91cd\u542f\u4e2d Succeeded \uff1a\u6240\u6709\u5bb9\u5668\u8fd0\u884c\u6210\u529f\u7136\u540e\u7ec8\u6b62\uff0c\u4e14\u4e0d\u4f1a\u91cd\u542f Failed \uff1a\u6240\u6709\u5bb9\u5668\u5df2\u7ecf\u7ec8\u6b62\u8fd0\u884c\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u5931\u8d25\u800c\u7ec8\u6b62 Unknow \uff1a\u72b6\u6001\u672a\u77e5 $ kubectl describe po nginx-66f9f9cfd5-2w97n Name: nginx-66f9f9cfd5-2w97n Namespace: default Labels: app = nginx pod-template-hash = 66f9f9cfd5 Status: Running $ kubectl get po nginx-66f9f9cfd5-2w97n -oyaml apiVersion: v1 kind: Pod metadata: name: nginx-66f9f9cfd5-2w97n namespace: default status: phase: Running Conditions \u00b6 \u6bcf\u4e2a Pod \u6709\u4e00\u7ec4 Condition\uff0c\u8868\u793a Pod \u5728\u5404\u4e2a\u9636\u6bb5\u7684\u72b6\u6001\u3002\u6bcf\u4e2a Condition \u5305\u542b\uff1a lastProbeTime lastTransitionTime message reason status \uff1a\u53ef\u53d6\u503c\u4e3a True \uff0c False \u548c Unknown type PodScheduled \uff1aPod \u88ab\u8c03\u5ea6\u5230 Node \u4e0a Ready \uff1aPod \u5df2\u7ecf\u53ef\u4ee5\u63a5\u53d7\u8bf7\u6c42\uff0c\u5e76\u4e14\u5e94\u5f53\u52a0\u5165\u5230 Service \u7684\u8d1f\u8f7d\u5747\u8861\u6c60\u4e2d Initialized \uff1a\u6240\u6709\u7684 Init Container \u90fd\u8d77\u6765\u4e86 Unschedulable \uff1a\u6682\u65f6\u65e0\u6cd5\u8c03\u5ea6\uff0c\u53ef\u80fd\u662f\u7531\u4e8e\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 Node ContainersReady \uff1a\u6240\u6709\u7684\u5bb9\u5668\u90fd ready $ kubectl describe po nginx-66f9f9cfd5-2w97n Name: nginx-66f9f9cfd5-2w97n Namespace: default Labels: app = nginx pod-template-hash = 66f9f9cfd5 Status: Running Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True $ kubectl get po nginx-66f9f9cfd5-2w97n -oyaml apiVersion: v1 kind: Pod metadata: name: nginx-66f9f9cfd5-2w97n namespace: default status: conditions: - lastProbeTime: null lastTransitionTime: \"2019-09-03T16:50:59Z\" status: \"True\" type: Initialized - lastProbeTime: null lastTransitionTime: \"2019-09-09T11:45:47Z\" status: \"True\" type: Ready - lastProbeTime: null lastTransitionTime: \"2019-09-09T11:45:47Z\" status: \"True\" type: ContainersReady - lastProbeTime: null lastTransitionTime: \"2019-09-03T16:48:33Z\" status: \"True\" type: PodScheduled phase: Running Restart Policy \u00b6 restartPolicy \u5bf9 Pod \u5185\u7684\u6240\u6709\u5bb9\u5668\u90fd\u751f\u6548\uff0c\u53ef\u53d6\u503c\u4e3a\uff1a Always (\u9ed8\u8ba4\u503c) OnFailure Never \u5bb9\u5668\u7ba1\u7406 \u00b6 imagePullPolicy \u00b6 imagePullPolicy \u6307\u5b9a\u4e86\u955c\u50cf\u7684\u62c9\u53d6\u7b56\u7565\uff0c\u53ef\u53d6\u503c\u4e3a\uff1a Always Never IfNotPresent \u5982\u679c\u4f7f\u7528\u7684\u955c\u50cf tag \u4e3a latest \uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a Always \uff0c\u5426\u5219\u9ed8\u8ba4\u503c\u4e3a IfNotPresent \u3002 \u7aef\u53e3 \u00b6 \u73af\u5883\u53d8\u91cf \u00b6 \u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u6765\u81ea\u4e8e\uff1a \u76f4\u63a5\u8bbe\u7f6e\u7684\u503c ConfigMap / Secret apiVersion : v1 kind : Pod metadata : name : my-service spec : containers : - name : my-service image : my-service env : - name : MYSQL_HOST valueFrom : configMapRef : name : mysql-conf key : host - name : MYSQL_PORT value : \"3306\" - name : USERNAME valueFrom : secretKeyRef : name : mysql-secret key : username - name : PASSWORD valueFrom : secretKeyRef : name : mysql-secret key : password \u8d44\u6e90\u9650\u5236 \u00b6 apiVersion : v1 kind : Pod metadata : name : my-service spec : containers : - name : my-service image : my-service resources : limits : cpu : \"1\" memory : \"200Mi\" requests : cpu : \"500m\" memory : \"100Mi\" \u5176\u4e2d\uff1a cpu \u53ef\u4ee5\u662f\u6570\u5b57\uff0c\u8868\u793a\u6838\u6570\uff1b\u4e5f\u53ef\u4ee5\u662f\u7c7b\u4f3c 500m \u7684\u5f62\u5f0f\uff0c 1000m \u4e0e 1 \u542b\u4e49\u76f8\u540c memory \u53ef\u4ee5\u662f\u6570\u5b57\uff0c\u8868\u793a bytes\uff1b\u4e5f\u53ef\u4ee5\u5e26\u540e\u7f00\u4f5c\u4e3a\u5355\u4f4d\uff0c\u53ef\u9009\u503c\u4e3a E, P, T, G, M, K, Ei, Pi, Ti, Gi, Mi, Ki \u66f4\u591a\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003\uff1a Assign Memory Resources to Containers and Pods Assign CPU Resources to Containers and Pods \u5982\u679c\u9700\u8981\u4f7f\u7528 GPU \u8d44\u6e90\uff0c\u53c2\u8003 GPU . Volume \u6302\u8f7d \u00b6 \u53c2\u8003 Persistent Volume . Probe \u00b6 \u53ef\u4ee5\u4e3a Pod \u5185\u7684\u5bb9\u5668\u8bbe\u7f6e\u63a2\u9488\uff0c\u68c0\u6d4b\u5bb9\u5668\u7684\u72b6\u6001\u3002 \u6709\u5982\u4e0b\u4e09\u79cd\u63a2\u9488\uff1a livenessProbe : \u68c0\u6d4b\u5bb9\u5668\u662f\u5426\u8fd0\u884c\u3002\u5982\u679c\u68c0\u6d4b\u5931\u8d25\uff0c\u90a3\u4e48 kubelet \u4f1a kill \u6389\u5bb9\u5668 readinessProbe : \u68c0\u6d4b\u5bb9\u5668\u662f\u5426\u53ef\u4ee5\u63a5\u6536\u8bf7\u6c42\u3002\u5982\u679c\u68c0\u6d4b\u5931\u8d25\uff0c\u90a3\u4e48 endpoints controller \u4f1a\u4ece Service \u7684 endpoints \u5217\u8868\u4e2d\u79fb\u9664\u8be5 Pod \u7684 IP startupProbe : \u68c0\u6d4b\u5bb9\u5668\u5185\u7684\u5e94\u7528\u662f\u5426\u5df2\u7ecf\u8d77\u6765\uff0c\u5728\u8be5\u63a2\u9488\u68c0\u6d4b\u6210\u529f\u4e4b\u524d\uff0c\u5176\u5b83\u63a2\u9488\u90fd\u4f1a\u88ab\u7981\u7528\u3002\u5bf9\u4e8e\u4e00\u4e9b\u542f\u52a8\u6bd4\u8f83\u6162\u7684\u5e94\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u63a2\u9488\uff0c\u4ece\u800c\u907f\u514d livenessProbe \u8fc7\u65e9\u68c0\u6d4b\u5931\u8d25\u5bfc\u81f4\u9891\u7e41\u91cd\u542f \u63a2\u9488\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u4e09\u79cd\u64cd\u4f5c\uff1a \u6267\u884c\u4e00\u6761\u547d\u4ee4\uff0c\u72b6\u6001\u7801\u4e3a0\u5219\u6210\u529f TCP\u7aef\u53e3\uff0c\u53ef\u4ee5\u8fde\u63a5\u5219\u6210\u529f HTTP Get \u8bf7\u6c42\uff0c\u8fd4\u56de\u7801\u4e3a 2xx \u6216\u8005 3xx \u5219\u6210\u529f \u4f8b\u5982\uff1a apiVersion : v1 kind : Pod metadata : name : goproxy labels : app : goproxy spec : containers : - name : goproxy image : k8s.gcr.io/goproxy:0.1 ports : - containerPort : 8080 readinessProbe : tcpSocket : port : 8080 initialDelaySeconds : 5 periodSeconds : 10 livenessProbe : tcpSocket : port : 8080 initialDelaySeconds : 15 periodSeconds : 20 hooks \u00b6 Init Container \u00b6 QoS \u00b6 \u5728\u521b\u5efa\u4e00\u4e2a Pod \u540e\uff0c\u4f1a\u81ea\u52a8\u4e3a\u8be5 Pod \u5206\u914d\u4e00\u4e2a QoS (Quality of Service) \u7b49\u7ea7\u3002QoS \u6709\u5982\u4e0b\u4e09\u79cd\uff1a Guaranteed \uff1aPod \u4e2d\u7684\u6bcf\u4e2a\u5bb9\u5668\u90fd\u8bbe\u7f6e\u4e86 CPU \u548c Memory \u7684\u8bf7\u6c42\u548c\u9650\u5236\uff0c\u4e14\u8bf7\u6c42\u548c\u9650\u5236\u7684\u503c\u76f8\u7b49 Burstable \uff1aPod \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u7684\u8d44\u6e90\u8bbe\u7f6e\u4e0d\u6ee1\u8db3 Guaranteed BestEffort \uff1aPod \u4e2d\u6bcf\u4e00\u4e2a\u5bb9\u5668\u90fd\u6ca1\u6709\u8bbe\u7f6e CPU \u548c Memory \u7684\u8bf7\u6c42\u548c\u9650\u5236 \u66f4\u591a\u4fe1\u606f\u53c2\u8003 Configure Quality of Service for Pods . \u8c03\u5ea6 \u00b6 \u53c2\u8003 Pod \u8c03\u5ea6 \u3002 \u7f51\u7edc\u914d\u7f6e \u00b6 hostNetwork \u00b6 dnsPolicy \u00b6 dnsConfig \u00b6 hostAliases \u00b6 \u53c2\u8003 Adding entries to Pod /etc/hosts with HostAliases . \u53c2\u8003 \u00b6 Pod Overview Pods Pod Lifecycle Configure Liveness, Readiness and Startup Probes Init Containers","title":"Pod"},{"location":"k8s/objects/pod/#pod","text":"","title":"Pod"},{"location":"k8s/objects/pod/#_1","text":"Pod \u662f k8s \u4e2d\u6700\u5c0f\u7684\u6267\u884c\u5355\u5143\uff0c\u662f\u5bf9\u5bb9\u5668\u7684\u4e00\u5c42\u5305\u88c5\uff0c\u6bcf\u4e2a Pod \u5185\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5bb9\u5668 Pod \u5185\u7684\u5bb9\u5668\u5171\u4eab\u7f51\u7edc\u548c\u5b58\u50a8\uff0c\u4e92\u76f8\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7 localhost \u6765\u8fdb\u884c\u901a\u4fe1 Pod\u662f\u975e\u6301\u4e45\u7684\u3001\u4e00\u6b21\u6027\u7684 (ephemeral, disposable) Pod \u4e0d\u4f1a\u81ea\u6108\uff0c\u5f53\u4e00\u4e2a Pod \u5931\u8d25\u540e\uff0c\u4f1a\u88ab\u5220\u9664 Controller\uff08\u4f8b\u5982 Deployment\uff0cStatefulSet\uff0cDaemonSet\uff09\u7528\u4e8e\u7ba1\u7406 Pod\uff0c\u5bf9 Pod \u8fdb\u884c\u8c03\u5ea6\uff0c\u526f\u672c\u7ba1\u7406\uff0c\u6eda\u52a8\u5347\u7ea7\u7b49 \u5f88\u5c11\u76f4\u63a5\u4f7f\u7528 Pod\uff0c\u4e00\u822c\u90fd\u662f\u901a\u8fc7 Controller \u6765\u4f7f\u7528 Pod template \u4e5f\u901a\u5e38\u4e0d\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u662f\u653e\u5728 Controller template \u91cc","title":"\u7b80\u4ecb"},{"location":"k8s/objects/pod/#pod_1","text":"","title":"Pod \u751f\u547d\u5468\u671f"},{"location":"k8s/objects/pod/#status","text":"Pending \uff1a\u5c1a\u672a\u8c03\u5ea6\uff0c\u955c\u50cf\u5728\u4e0b\u8f7d\u4e2d\uff0c\u6216\u8005\u627e\u4e0d\u5230\u5408\u9002\u7684\u8c03\u5ea6\u8282\u70b9 Running \uff1a\u88ab\u8c03\u5ea6\u5230\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u5176\u4e2d\u81f3\u5c11\u4e00\u4e2a\u5bb9\u5668\u8fd8\u5728\u8fd0\u884c\u4e2d\uff0c\u542f\u52a8\u4e2d\u6216\u8005\u91cd\u542f\u4e2d Succeeded \uff1a\u6240\u6709\u5bb9\u5668\u8fd0\u884c\u6210\u529f\u7136\u540e\u7ec8\u6b62\uff0c\u4e14\u4e0d\u4f1a\u91cd\u542f Failed \uff1a\u6240\u6709\u5bb9\u5668\u5df2\u7ecf\u7ec8\u6b62\u8fd0\u884c\uff0c\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u5931\u8d25\u800c\u7ec8\u6b62 Unknow \uff1a\u72b6\u6001\u672a\u77e5 $ kubectl describe po nginx-66f9f9cfd5-2w97n Name: nginx-66f9f9cfd5-2w97n Namespace: default Labels: app = nginx pod-template-hash = 66f9f9cfd5 Status: Running $ kubectl get po nginx-66f9f9cfd5-2w97n -oyaml apiVersion: v1 kind: Pod metadata: name: nginx-66f9f9cfd5-2w97n namespace: default status: phase: Running","title":"Status"},{"location":"k8s/objects/pod/#conditions","text":"\u6bcf\u4e2a Pod \u6709\u4e00\u7ec4 Condition\uff0c\u8868\u793a Pod \u5728\u5404\u4e2a\u9636\u6bb5\u7684\u72b6\u6001\u3002\u6bcf\u4e2a Condition \u5305\u542b\uff1a lastProbeTime lastTransitionTime message reason status \uff1a\u53ef\u53d6\u503c\u4e3a True \uff0c False \u548c Unknown type PodScheduled \uff1aPod \u88ab\u8c03\u5ea6\u5230 Node \u4e0a Ready \uff1aPod \u5df2\u7ecf\u53ef\u4ee5\u63a5\u53d7\u8bf7\u6c42\uff0c\u5e76\u4e14\u5e94\u5f53\u52a0\u5165\u5230 Service \u7684\u8d1f\u8f7d\u5747\u8861\u6c60\u4e2d Initialized \uff1a\u6240\u6709\u7684 Init Container \u90fd\u8d77\u6765\u4e86 Unschedulable \uff1a\u6682\u65f6\u65e0\u6cd5\u8c03\u5ea6\uff0c\u53ef\u80fd\u662f\u7531\u4e8e\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684 Node ContainersReady \uff1a\u6240\u6709\u7684\u5bb9\u5668\u90fd ready $ kubectl describe po nginx-66f9f9cfd5-2w97n Name: nginx-66f9f9cfd5-2w97n Namespace: default Labels: app = nginx pod-template-hash = 66f9f9cfd5 Status: Running Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True $ kubectl get po nginx-66f9f9cfd5-2w97n -oyaml apiVersion: v1 kind: Pod metadata: name: nginx-66f9f9cfd5-2w97n namespace: default status: conditions: - lastProbeTime: null lastTransitionTime: \"2019-09-03T16:50:59Z\" status: \"True\" type: Initialized - lastProbeTime: null lastTransitionTime: \"2019-09-09T11:45:47Z\" status: \"True\" type: Ready - lastProbeTime: null lastTransitionTime: \"2019-09-09T11:45:47Z\" status: \"True\" type: ContainersReady - lastProbeTime: null lastTransitionTime: \"2019-09-03T16:48:33Z\" status: \"True\" type: PodScheduled phase: Running","title":"Conditions"},{"location":"k8s/objects/pod/#restart-policy","text":"restartPolicy \u5bf9 Pod \u5185\u7684\u6240\u6709\u5bb9\u5668\u90fd\u751f\u6548\uff0c\u53ef\u53d6\u503c\u4e3a\uff1a Always (\u9ed8\u8ba4\u503c) OnFailure Never","title":"Restart Policy"},{"location":"k8s/objects/pod/#_2","text":"","title":"\u5bb9\u5668\u7ba1\u7406"},{"location":"k8s/objects/pod/#imagepullpolicy","text":"imagePullPolicy \u6307\u5b9a\u4e86\u955c\u50cf\u7684\u62c9\u53d6\u7b56\u7565\uff0c\u53ef\u53d6\u503c\u4e3a\uff1a Always Never IfNotPresent \u5982\u679c\u4f7f\u7528\u7684\u955c\u50cf tag \u4e3a latest \uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a Always \uff0c\u5426\u5219\u9ed8\u8ba4\u503c\u4e3a IfNotPresent \u3002","title":"imagePullPolicy"},{"location":"k8s/objects/pod/#_3","text":"","title":"\u7aef\u53e3"},{"location":"k8s/objects/pod/#_4","text":"\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u6765\u81ea\u4e8e\uff1a \u76f4\u63a5\u8bbe\u7f6e\u7684\u503c ConfigMap / Secret apiVersion : v1 kind : Pod metadata : name : my-service spec : containers : - name : my-service image : my-service env : - name : MYSQL_HOST valueFrom : configMapRef : name : mysql-conf key : host - name : MYSQL_PORT value : \"3306\" - name : USERNAME valueFrom : secretKeyRef : name : mysql-secret key : username - name : PASSWORD valueFrom : secretKeyRef : name : mysql-secret key : password","title":"\u73af\u5883\u53d8\u91cf"},{"location":"k8s/objects/pod/#_5","text":"apiVersion : v1 kind : Pod metadata : name : my-service spec : containers : - name : my-service image : my-service resources : limits : cpu : \"1\" memory : \"200Mi\" requests : cpu : \"500m\" memory : \"100Mi\" \u5176\u4e2d\uff1a cpu \u53ef\u4ee5\u662f\u6570\u5b57\uff0c\u8868\u793a\u6838\u6570\uff1b\u4e5f\u53ef\u4ee5\u662f\u7c7b\u4f3c 500m \u7684\u5f62\u5f0f\uff0c 1000m \u4e0e 1 \u542b\u4e49\u76f8\u540c memory \u53ef\u4ee5\u662f\u6570\u5b57\uff0c\u8868\u793a bytes\uff1b\u4e5f\u53ef\u4ee5\u5e26\u540e\u7f00\u4f5c\u4e3a\u5355\u4f4d\uff0c\u53ef\u9009\u503c\u4e3a E, P, T, G, M, K, Ei, Pi, Ti, Gi, Mi, Ki \u66f4\u591a\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003\uff1a Assign Memory Resources to Containers and Pods Assign CPU Resources to Containers and Pods \u5982\u679c\u9700\u8981\u4f7f\u7528 GPU \u8d44\u6e90\uff0c\u53c2\u8003 GPU .","title":"\u8d44\u6e90\u9650\u5236"},{"location":"k8s/objects/pod/#volume","text":"\u53c2\u8003 Persistent Volume .","title":"Volume \u6302\u8f7d"},{"location":"k8s/objects/pod/#probe","text":"\u53ef\u4ee5\u4e3a Pod \u5185\u7684\u5bb9\u5668\u8bbe\u7f6e\u63a2\u9488\uff0c\u68c0\u6d4b\u5bb9\u5668\u7684\u72b6\u6001\u3002 \u6709\u5982\u4e0b\u4e09\u79cd\u63a2\u9488\uff1a livenessProbe : \u68c0\u6d4b\u5bb9\u5668\u662f\u5426\u8fd0\u884c\u3002\u5982\u679c\u68c0\u6d4b\u5931\u8d25\uff0c\u90a3\u4e48 kubelet \u4f1a kill \u6389\u5bb9\u5668 readinessProbe : \u68c0\u6d4b\u5bb9\u5668\u662f\u5426\u53ef\u4ee5\u63a5\u6536\u8bf7\u6c42\u3002\u5982\u679c\u68c0\u6d4b\u5931\u8d25\uff0c\u90a3\u4e48 endpoints controller \u4f1a\u4ece Service \u7684 endpoints \u5217\u8868\u4e2d\u79fb\u9664\u8be5 Pod \u7684 IP startupProbe : \u68c0\u6d4b\u5bb9\u5668\u5185\u7684\u5e94\u7528\u662f\u5426\u5df2\u7ecf\u8d77\u6765\uff0c\u5728\u8be5\u63a2\u9488\u68c0\u6d4b\u6210\u529f\u4e4b\u524d\uff0c\u5176\u5b83\u63a2\u9488\u90fd\u4f1a\u88ab\u7981\u7528\u3002\u5bf9\u4e8e\u4e00\u4e9b\u542f\u52a8\u6bd4\u8f83\u6162\u7684\u5e94\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u63a2\u9488\uff0c\u4ece\u800c\u907f\u514d livenessProbe \u8fc7\u65e9\u68c0\u6d4b\u5931\u8d25\u5bfc\u81f4\u9891\u7e41\u91cd\u542f \u63a2\u9488\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u4e09\u79cd\u64cd\u4f5c\uff1a \u6267\u884c\u4e00\u6761\u547d\u4ee4\uff0c\u72b6\u6001\u7801\u4e3a0\u5219\u6210\u529f TCP\u7aef\u53e3\uff0c\u53ef\u4ee5\u8fde\u63a5\u5219\u6210\u529f HTTP Get \u8bf7\u6c42\uff0c\u8fd4\u56de\u7801\u4e3a 2xx \u6216\u8005 3xx \u5219\u6210\u529f \u4f8b\u5982\uff1a apiVersion : v1 kind : Pod metadata : name : goproxy labels : app : goproxy spec : containers : - name : goproxy image : k8s.gcr.io/goproxy:0.1 ports : - containerPort : 8080 readinessProbe : tcpSocket : port : 8080 initialDelaySeconds : 5 periodSeconds : 10 livenessProbe : tcpSocket : port : 8080 initialDelaySeconds : 15 periodSeconds : 20","title":"Probe"},{"location":"k8s/objects/pod/#hooks","text":"","title":"hooks"},{"location":"k8s/objects/pod/#init-container","text":"","title":"Init Container"},{"location":"k8s/objects/pod/#qos","text":"\u5728\u521b\u5efa\u4e00\u4e2a Pod \u540e\uff0c\u4f1a\u81ea\u52a8\u4e3a\u8be5 Pod \u5206\u914d\u4e00\u4e2a QoS (Quality of Service) \u7b49\u7ea7\u3002QoS \u6709\u5982\u4e0b\u4e09\u79cd\uff1a Guaranteed \uff1aPod \u4e2d\u7684\u6bcf\u4e2a\u5bb9\u5668\u90fd\u8bbe\u7f6e\u4e86 CPU \u548c Memory \u7684\u8bf7\u6c42\u548c\u9650\u5236\uff0c\u4e14\u8bf7\u6c42\u548c\u9650\u5236\u7684\u503c\u76f8\u7b49 Burstable \uff1aPod \u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u7684\u8d44\u6e90\u8bbe\u7f6e\u4e0d\u6ee1\u8db3 Guaranteed BestEffort \uff1aPod \u4e2d\u6bcf\u4e00\u4e2a\u5bb9\u5668\u90fd\u6ca1\u6709\u8bbe\u7f6e CPU \u548c Memory \u7684\u8bf7\u6c42\u548c\u9650\u5236 \u66f4\u591a\u4fe1\u606f\u53c2\u8003 Configure Quality of Service for Pods .","title":"QoS"},{"location":"k8s/objects/pod/#_6","text":"\u53c2\u8003 Pod \u8c03\u5ea6 \u3002","title":"\u8c03\u5ea6"},{"location":"k8s/objects/pod/#_7","text":"","title":"\u7f51\u7edc\u914d\u7f6e"},{"location":"k8s/objects/pod/#hostnetwork","text":"","title":"hostNetwork"},{"location":"k8s/objects/pod/#dnspolicy","text":"","title":"dnsPolicy"},{"location":"k8s/objects/pod/#dnsconfig","text":"","title":"dnsConfig"},{"location":"k8s/objects/pod/#hostaliases","text":"\u53c2\u8003 Adding entries to Pod /etc/hosts with HostAliases .","title":"hostAliases"},{"location":"k8s/objects/pod/#_8","text":"Pod Overview Pods Pod Lifecycle Configure Liveness, Readiness and Startup Probes Init Containers","title":"\u53c2\u8003"},{"location":"k8s/objects/replica-set/","text":"ReplicaSet \u00b6 \u4ecb\u7ecd \u00b6 Replicaset \u7528\u6765\u4fdd\u8bc1 Pod \u7684\u526f\u672c\u6570\u603b\u662f\u4e0e\u671f\u671b\u503c\u76f8\u7b49\u3002 apiVersion : apps/v1 kind : ReplicaSet metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.17.2 ports : - containerPort : 80 \u4e00\u822c\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528 ReplicaSet\uff0c\u800c\u662f\u901a\u8fc7 Deployment \u6765\u8fdb\u884c\u7ba1\u7406\u3002 \u53c2\u8003 \u00b6 ReplicaSet ReplicationController","title":"ReplicaSet"},{"location":"k8s/objects/replica-set/#replicaset","text":"","title":"ReplicaSet"},{"location":"k8s/objects/replica-set/#_1","text":"Replicaset \u7528\u6765\u4fdd\u8bc1 Pod \u7684\u526f\u672c\u6570\u603b\u662f\u4e0e\u671f\u671b\u503c\u76f8\u7b49\u3002 apiVersion : apps/v1 kind : ReplicaSet metadata : name : nginx spec : replicas : 3 selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : containers : - name : nginx image : nginx:1.17.2 ports : - containerPort : 80 \u4e00\u822c\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528 ReplicaSet\uff0c\u800c\u662f\u901a\u8fc7 Deployment \u6765\u8fdb\u884c\u7ba1\u7406\u3002","title":"\u4ecb\u7ecd"},{"location":"k8s/objects/replica-set/#_2","text":"ReplicaSet ReplicationController","title":"\u53c2\u8003"},{"location":"k8s/objects/resource-quota/","text":"ResourceQuota \u00b6 \u53c2\u8003 \u00b6 Resource Quotas","title":"ResourceQuota"},{"location":"k8s/objects/resource-quota/#resourcequota","text":"","title":"ResourceQuota"},{"location":"k8s/objects/resource-quota/#_1","text":"Resource Quotas","title":"\u53c2\u8003"},{"location":"k8s/objects/role-binding/","text":"RoleBinding \u00b6 \u8be6\u60c5\u67e5\u770b RBAC \u3002","title":"RoleBinding"},{"location":"k8s/objects/role-binding/#rolebinding","text":"\u8be6\u60c5\u67e5\u770b RBAC \u3002","title":"RoleBinding"},{"location":"k8s/objects/role/","text":"Role \u00b6 \u8be6\u60c5\u67e5\u770b RBAC \u3002","title":"Role"},{"location":"k8s/objects/role/#role","text":"\u8be6\u60c5\u67e5\u770b RBAC \u3002","title":"Role"},{"location":"k8s/objects/secret/","text":"Secret \u00b6 \u7c7b\u578b \u00b6 \u6267\u884c kubectl create secret -h \uff0c\u53ef\u4ee5\u770b\u5230\uff1a Create a secret using specified subcommand. Available Commands: docker-registry Create a secret for use with a Docker registry generic Create a secret from a local file, directory or literal value tls Create a TLS secret Usage: kubectl create secret [flags] [options] \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b flag \u53bb\u521b\u5efa Secret\uff1a generic\uff1a\u521b\u5efa\u51fa\u6765\u7684 Secret \u7c7b\u578b\u4e3a Opaque docker-registry\uff1a\u521b\u5efa\u51fa\u6765\u7684 Secret \u7c7b\u578b\u4e3a kubernetes.io/dockerconfigjson tls\uff1a\u521b\u5efa\u51fa\u6765\u7684 Secret \u7c7b\u578b\u4e3a kubernetes.io/tls \u9664\u4e86\u4ee5\u4e0a\u4e09\u79cd\u7c7b\u578b\u5916\uff0c\u8fd8\u6709 kubernetes.io/service-account-token \u7c7b\u578b\u7684 Secret\uff0c\u53ef\u4ee5\u53c2\u8003 ServiceAccount \u521b\u5efa Generic Secret \u00b6 From literal \u00b6 $ kubectl create secret generic userauth \\ --from-literal = username = admin \\ --from-literal = password = admin From file \u00b6 $ echo -n admin | tee username $ echo -n admin | tee password $ kubectl create secret generic userauth \\ --from-file = username \\ --from-file = password From directory \u00b6 $ echo -n admin | tee auth/username $ echo -n admin | tee auth/password $ kubectl create secret generic userauth --from-file = auth/ From env file \u00b6 $ echo \"username=admin\\npassword=admin\" | tee auth.env $ kubectl create secret generic userauth --from-env-file = auth.env From YAML \u00b6 apiVersion : v1 kind : Secret metadata : name : userauth type : Opaque data : username : YWRtaW4= password : YWRtaW4= $ kubectl apply -f userauth.yaml \u521b\u5efa Docker Registry Secret \u00b6 $ kubectl create secret docker-registry private-registry \\ --docker-username = admin \\ --docker-password = admin \\ --docker-email = admin@example.com \\ --docker-server = https://127.0.0.1:5000 \u7136\u540e\u901a\u8fc7 kubectl get secret private-registry -oyaml \u67e5\u770b\uff1a apiVersion : v1 data : .dockerconfigjson : eyJhdXRocyI6eyJodHRwczovLzEyNy4wLjAuMTo1MDAwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJwYXNzd29yZCI6ImFkbWluIiwiZW1haWwiOiJhZG1pbkBleGFtcGxlLmNvbSIsImF1dGgiOiJZV1J0YVc0NllXUnRhVzQ9In19fQ== kind : Secret metadata : creationTimestamp : 2019-08-11T10:03:47Z name : private-registry namespace : default resourceVersion : \"571738\" selfLink : /api/v1/namespaces/default/secrets/private-registry uid : 4fb6a863-bc1f-11e9-98fc-025000000001 type : kubernetes.io/dockerconfigjson \u5176\u4e2d .dockerconfigjson \u5b58\u653e\u7684\u5185\u5bb9\u5982\u4e0b\uff1a $ echo eyJhdXRocyI6eyJodHRwczovLzEyNy4wLjAuMTo1MDAwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJwYXNzd29yZCI6ImFkbWluIiwiZW1haWwiOiJhZG1pbkBleGFtcGxlLmNvbSIsImF1dGgiOiJZV1J0YVc0NllXUnRhVzQ9In19fQ == | base64 -D | jq { \"auths\" : { \"https://127.0.0.1:5000\" : { \"username\" : \"admin\" , \"password\" : \"admin\" , \"email\" : \"admin@example.com\" , \"auth\" : \"YWRtaW46YWRtaW4=\" } } } \u4e5f\u53ef\u4ee5\u901a\u8fc7 .yaml \u6587\u4ef6\u5c06\u5185\u5bb9 base64 \u7f16\u7801\u53bb\u521b\u5efa Secret \u521b\u5efa TLS Secret \u00b6 \u9996\u5148\u751f\u6210\u81ea\u7b7e\u540d\u8bc1\u4e66\uff1a # genrate private key $ openssl genrsa -out server.key 2048 # generate certificate signing request $ openssl req -new -sha256 -key server.key -out server.csr # generate self-signed certificate $ openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt \u7136\u540e\u6267\u884c\uff1a $ kubectl create secret tls tls-secret --cert = server.cert --key = server.key \u901a\u8fc7 kubectl get secret tls-secret -oyaml \u67e5\u770b\u5185\u5bb9\uff1a apiVersion: v1 data: tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0... tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVk... kind: Secret metadata: creationTimestamp: 2019-08-11T10:17:07Z name: tls-secret namespace: default resourceVersion: \"572616\" selfLink: /api/v1/namespaces/default/secrets/tls-secret uid: 2c35e338-bc21-11e9-98fc-025000000001 type: kubernetes.io/tls \u4e5f\u53ef\u4ee5\u901a\u8fc7 .yaml \u6587\u4ef6\u5c06 crt \u548c key \u505a base64 \u7f16\u7801\u53bb\u521b\u5efa Secret \u4f7f\u7528 Secret \u00b6 Secret \u7684\u4f7f\u7528\u548c ConfigMap \u7c7b\u4f3c\uff0c\u5373\u53ef\u4ee5\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a Volume\u3002 \u4f5c\u4e3a\u73af\u5883\u53d8\u91cf \u00b6 \u53ef\u4ee5\u4f7f\u7528 env \u4ece Secret \u4e2d\u53d6\u51fa\u7279\u5b9a\u7684\u503c\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff1a apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $USERNAME:$PASSWORD env : - name : USERNAME valueFrom : secretKeyRef : name : userauth key : username - name : PASSWORD valueFrom : secretKeyRef : name : userauth key : password restartPolicy : Never \u4e5f\u53ef\u4ee5\u4f7f\u7528 envFrom \u4f7f\u7528\u6574\u4e2a Secret \u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff1a apiVersion : v1 kind : Secret metadata : name : userauth type : Opaque data : USERNAME : YWRtaW4= PASSWORD : YWRtaW4= --- apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $USERNAME:$PASSWORD envFrom : - secretRef : name : userauth restartPolicy : Never \u4f5c\u4e3a Volume \u00b6 apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $(cat /app/auth/username):$(cat /app/auth/password) volumeMounts : - name : userauth mountPath : /app/auth volumes : - name : userauth secret : secretName : userauth restartPolicy : Never \u4f7f\u7528 Docker Registry Secret \u00b6 apiVersion : v1 kind : Pod metadata : name : private-reg spec : containers : - name : private-reg-container image : private-image imagePullSecrets : - name : private-registry \u53c2\u8003 \u00b6 Secrets","title":"Secret"},{"location":"k8s/objects/secret/#secret","text":"","title":"Secret"},{"location":"k8s/objects/secret/#_1","text":"\u6267\u884c kubectl create secret -h \uff0c\u53ef\u4ee5\u770b\u5230\uff1a Create a secret using specified subcommand. Available Commands: docker-registry Create a secret for use with a Docker registry generic Create a secret from a local file, directory or literal value tls Create a TLS secret Usage: kubectl create secret [flags] [options] \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b flag \u53bb\u521b\u5efa Secret\uff1a generic\uff1a\u521b\u5efa\u51fa\u6765\u7684 Secret \u7c7b\u578b\u4e3a Opaque docker-registry\uff1a\u521b\u5efa\u51fa\u6765\u7684 Secret \u7c7b\u578b\u4e3a kubernetes.io/dockerconfigjson tls\uff1a\u521b\u5efa\u51fa\u6765\u7684 Secret \u7c7b\u578b\u4e3a kubernetes.io/tls \u9664\u4e86\u4ee5\u4e0a\u4e09\u79cd\u7c7b\u578b\u5916\uff0c\u8fd8\u6709 kubernetes.io/service-account-token \u7c7b\u578b\u7684 Secret\uff0c\u53ef\u4ee5\u53c2\u8003 ServiceAccount","title":"\u7c7b\u578b"},{"location":"k8s/objects/secret/#generic-secret","text":"","title":"\u521b\u5efa Generic Secret"},{"location":"k8s/objects/secret/#from-literal","text":"$ kubectl create secret generic userauth \\ --from-literal = username = admin \\ --from-literal = password = admin","title":"From literal"},{"location":"k8s/objects/secret/#from-file","text":"$ echo -n admin | tee username $ echo -n admin | tee password $ kubectl create secret generic userauth \\ --from-file = username \\ --from-file = password","title":"From file"},{"location":"k8s/objects/secret/#from-directory","text":"$ echo -n admin | tee auth/username $ echo -n admin | tee auth/password $ kubectl create secret generic userauth --from-file = auth/","title":"From directory"},{"location":"k8s/objects/secret/#from-env-file","text":"$ echo \"username=admin\\npassword=admin\" | tee auth.env $ kubectl create secret generic userauth --from-env-file = auth.env","title":"From env file"},{"location":"k8s/objects/secret/#from-yaml","text":"apiVersion : v1 kind : Secret metadata : name : userauth type : Opaque data : username : YWRtaW4= password : YWRtaW4= $ kubectl apply -f userauth.yaml","title":"From YAML"},{"location":"k8s/objects/secret/#docker-registry-secret","text":"$ kubectl create secret docker-registry private-registry \\ --docker-username = admin \\ --docker-password = admin \\ --docker-email = admin@example.com \\ --docker-server = https://127.0.0.1:5000 \u7136\u540e\u901a\u8fc7 kubectl get secret private-registry -oyaml \u67e5\u770b\uff1a apiVersion : v1 data : .dockerconfigjson : eyJhdXRocyI6eyJodHRwczovLzEyNy4wLjAuMTo1MDAwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJwYXNzd29yZCI6ImFkbWluIiwiZW1haWwiOiJhZG1pbkBleGFtcGxlLmNvbSIsImF1dGgiOiJZV1J0YVc0NllXUnRhVzQ9In19fQ== kind : Secret metadata : creationTimestamp : 2019-08-11T10:03:47Z name : private-registry namespace : default resourceVersion : \"571738\" selfLink : /api/v1/namespaces/default/secrets/private-registry uid : 4fb6a863-bc1f-11e9-98fc-025000000001 type : kubernetes.io/dockerconfigjson \u5176\u4e2d .dockerconfigjson \u5b58\u653e\u7684\u5185\u5bb9\u5982\u4e0b\uff1a $ echo eyJhdXRocyI6eyJodHRwczovLzEyNy4wLjAuMTo1MDAwIjp7InVzZXJuYW1lIjoiYWRtaW4iLCJwYXNzd29yZCI6ImFkbWluIiwiZW1haWwiOiJhZG1pbkBleGFtcGxlLmNvbSIsImF1dGgiOiJZV1J0YVc0NllXUnRhVzQ9In19fQ == | base64 -D | jq { \"auths\" : { \"https://127.0.0.1:5000\" : { \"username\" : \"admin\" , \"password\" : \"admin\" , \"email\" : \"admin@example.com\" , \"auth\" : \"YWRtaW46YWRtaW4=\" } } } \u4e5f\u53ef\u4ee5\u901a\u8fc7 .yaml \u6587\u4ef6\u5c06\u5185\u5bb9 base64 \u7f16\u7801\u53bb\u521b\u5efa Secret","title":"\u521b\u5efa Docker Registry Secret"},{"location":"k8s/objects/secret/#tls-secret","text":"\u9996\u5148\u751f\u6210\u81ea\u7b7e\u540d\u8bc1\u4e66\uff1a # genrate private key $ openssl genrsa -out server.key 2048 # generate certificate signing request $ openssl req -new -sha256 -key server.key -out server.csr # generate self-signed certificate $ openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt \u7136\u540e\u6267\u884c\uff1a $ kubectl create secret tls tls-secret --cert = server.cert --key = server.key \u901a\u8fc7 kubectl get secret tls-secret -oyaml \u67e5\u770b\u5185\u5bb9\uff1a apiVersion: v1 data: tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0... tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVk... kind: Secret metadata: creationTimestamp: 2019-08-11T10:17:07Z name: tls-secret namespace: default resourceVersion: \"572616\" selfLink: /api/v1/namespaces/default/secrets/tls-secret uid: 2c35e338-bc21-11e9-98fc-025000000001 type: kubernetes.io/tls \u4e5f\u53ef\u4ee5\u901a\u8fc7 .yaml \u6587\u4ef6\u5c06 crt \u548c key \u505a base64 \u7f16\u7801\u53bb\u521b\u5efa Secret","title":"\u521b\u5efa TLS Secret"},{"location":"k8s/objects/secret/#secret_1","text":"Secret \u7684\u4f7f\u7528\u548c ConfigMap \u7c7b\u4f3c\uff0c\u5373\u53ef\u4ee5\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a Volume\u3002","title":"\u4f7f\u7528 Secret"},{"location":"k8s/objects/secret/#_2","text":"\u53ef\u4ee5\u4f7f\u7528 env \u4ece Secret \u4e2d\u53d6\u51fa\u7279\u5b9a\u7684\u503c\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff1a apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $USERNAME:$PASSWORD env : - name : USERNAME valueFrom : secretKeyRef : name : userauth key : username - name : PASSWORD valueFrom : secretKeyRef : name : userauth key : password restartPolicy : Never \u4e5f\u53ef\u4ee5\u4f7f\u7528 envFrom \u4f7f\u7528\u6574\u4e2a Secret \u4f5c\u4e3a\u73af\u5883\u53d8\u91cf\uff1a apiVersion : v1 kind : Secret metadata : name : userauth type : Opaque data : USERNAME : YWRtaW4= PASSWORD : YWRtaW4= --- apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $USERNAME:$PASSWORD envFrom : - secretRef : name : userauth restartPolicy : Never","title":"\u4f5c\u4e3a\u73af\u5883\u53d8\u91cf"},{"location":"k8s/objects/secret/#volume","text":"apiVersion : v1 kind : Pod metadata : name : busybox spec : containers : - name : busybox image : busybox:1.31.0 command : - /bin/sh - -c - echo $(cat /app/auth/username):$(cat /app/auth/password) volumeMounts : - name : userauth mountPath : /app/auth volumes : - name : userauth secret : secretName : userauth restartPolicy : Never","title":"\u4f5c\u4e3a Volume"},{"location":"k8s/objects/secret/#docker-registry-secret_1","text":"apiVersion : v1 kind : Pod metadata : name : private-reg spec : containers : - name : private-reg-container image : private-image imagePullSecrets : - name : private-registry","title":"\u4f7f\u7528 Docker Registry Secret"},{"location":"k8s/objects/secret/#_3","text":"Secrets","title":"\u53c2\u8003"},{"location":"k8s/objects/service-account/","text":"ServiceAccount \u00b6 \u7b80\u4ecb \u00b6 ServiceAccount \u662f\u4e3a Pod \u5185\u7684\u8fdb\u7a0b\u8c03\u7528\u96c6\u7fa4\u7684 API \u6240\u4f7f\u7528\u7684\uff0c\u662f\u4e0e namespace \u7ed1\u5b9a\u7684\u3002 \u6bcf\u4e2a namespace \u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa\u4e00\u4e2a default \u7684 ServiceAccount\uff0c\u6bcf\u4e2a ServiceAccount \u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa\u4e00\u4e2a\u7c7b\u578b\u4e3a kubernetes.io/service-account-token \u7684 Secret\u3002 $ kubectl create ns test $ kubectl get sa -n test NAME SECRETS AGE default 1 48s $ kubectl get sa -n test default -oyaml apiVersion: v1 kind: ServiceAccount metadata: creationTimestamp: \"2019-08-25T14:26:16Z\" name: default namespace: test resourceVersion: \"116679\" selfLink: /api/v1/namespaces/test/serviceaccounts/default uid: 4c51e386-c744-11e9-b46c-025000000001 secrets: - name: default-token-6wgrh $ kubectl get secret -n test NAME TYPE DATA AGE default-token-6wgrh kubernetes.io/service-account-token 3 83s $ kubectl get secret -n test default-token-6wgrh -oyaml apiVersion: v1 data: ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ... namespace: dGVzdA == token: ZXlKaGJHY2lPaUpTVXpJMU5pSX... kind: Secret metadata: annotations: kubernetes.io/service-account.name: default kubernetes.io/service-account.uid: 4c51e386-c744-11e9-b46c-025000000001 creationTimestamp: \"2019-08-25T14:26:16Z\" name: default-token-6wgrh namespace: test resourceVersion: \"116678\" selfLink: /api/v1/namespaces/test/secrets/default-token-6wgrh uid: 4c586a91-c744-11e9-b46c-025000000001 type: kubernetes.io/service-account-token Pod \u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d namespace \u4e0b default \u7684 ServiceAccount\uff0c\u5e76\u4e14\u5c06\u5176\u5bf9\u5e94\u7684 Secret \u6302\u8f7d\u5230\u5bb9\u5668\u7684 /var/run/secrets/kubernetes.io/serviceaccount \u4e0b\u3002 $ kubectl describe po nginx-66f9f9cfd5-64ht8 -n test Name: nginx-66f9f9cfd5-64ht8 Namespace: test Containers: nginx: Container ID: docker://5d84cb88a19db3390a924f85da507b24c449f9c18bf8ba49e7899eb00b87fc72 Image: nginx:1.16 Port: 80 /TCP Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-6wgrh ( ro ) Volumes: default-token-6wgrh: Type: Secret ( a volume populated by a Secret ) SecretName: default-token-6wgrh Optional: false $ kubectl get po nginx-66f9f9cfd5-64ht8 -n test -oyaml apiVersion: v1 kind: Pod metadata: name: nginx-66f9f9cfd5-64ht8 namespace: test spec: containers: - image: nginx:1.16 name: nginx ports: - containerPort: 80 protocol: TCP volumeMounts: - mountPath: /var/run/secrets/kubernetes.io/serviceaccount name: default-token-6wgrh readOnly: true serviceAccount: default serviceAccountName: default volumes: - name: default-token-6wgrh secret: defaultMode: 420 secretName: default-token-6wgrh \u521b\u5efa ServiceAccount \u00b6 $ kubectl create sa test-sa apiVersion : v1 kind : ServiceAccount metadata : name : test-sa \u4f7f\u7528 ServiceAccount \u00b6 apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : serviceAccountName : test-sa containers : - name : nginx image : nginx:1.16 ports : - containerPort : 80 ServiceAccount \u901a\u5e38\u4f1a\u548c Role \u6216\u8005 ClusterRole \u8fdb\u884c\u7ed1\u5b9a\uff0c\u4ece\u800c\u88ab\u8d4b\u4e88\u4e00\u5b9a\u7684\u6743\u9650\uff0c\u4f8b\u5982\u8bfb\u53d6 Pod \u4fe1\u606f\u7b49\u3002\u8be6\u60c5\u67e5\u770b RBAC \u3002 \u6dfb\u52a0 imagePullSecret \u00b6 $ kubectl create secret docker-registry private-registry \\ --docker-username = admin \\ --docker-password = admin \\ --docker-email = admin@example.com \\ --docker-server = https://127.0.0.1:5000 $ kubectl create sa test-sa $ kubectl patch sa test-sa -p '{\"imagePullSecrets\": [{\"name\": \"private-registry\"}]}' $ kubectl get sa test-sa -oyaml apiVersion: v1 kind: ServiceAccount metadata: name: test-sa namespace: default secrets: - name: test-sa-token-pmk8t imagePullSecrets: - name: private-registry \u7136\u540e\u4e4b\u540e\u521b\u5efa\u7684 Pod \u5c31\u4f1a\u81ea\u52a8\u5e26\u4e0a\u6307\u5b9a\u7684 imagePullSecrets \uff1a $ kubectl get po nginx-7988dffbf-svfvh -oyaml apiVersion : v1 kind : Pod metadata : name : nginx-7988dffbf-svfvh namespace : default spec : containers : - image : nginx:1.16 name : nginx imagePullSecrets : - name : private-registry \u53c2\u8003 \u00b6 Configure Service Accounts for Pods Managing Service Accounts","title":"ServiceAccount"},{"location":"k8s/objects/service-account/#serviceaccount","text":"","title":"ServiceAccount"},{"location":"k8s/objects/service-account/#_1","text":"ServiceAccount \u662f\u4e3a Pod \u5185\u7684\u8fdb\u7a0b\u8c03\u7528\u96c6\u7fa4\u7684 API \u6240\u4f7f\u7528\u7684\uff0c\u662f\u4e0e namespace \u7ed1\u5b9a\u7684\u3002 \u6bcf\u4e2a namespace \u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa\u4e00\u4e2a default \u7684 ServiceAccount\uff0c\u6bcf\u4e2a ServiceAccount \u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u521b\u5efa\u4e00\u4e2a\u7c7b\u578b\u4e3a kubernetes.io/service-account-token \u7684 Secret\u3002 $ kubectl create ns test $ kubectl get sa -n test NAME SECRETS AGE default 1 48s $ kubectl get sa -n test default -oyaml apiVersion: v1 kind: ServiceAccount metadata: creationTimestamp: \"2019-08-25T14:26:16Z\" name: default namespace: test resourceVersion: \"116679\" selfLink: /api/v1/namespaces/test/serviceaccounts/default uid: 4c51e386-c744-11e9-b46c-025000000001 secrets: - name: default-token-6wgrh $ kubectl get secret -n test NAME TYPE DATA AGE default-token-6wgrh kubernetes.io/service-account-token 3 83s $ kubectl get secret -n test default-token-6wgrh -oyaml apiVersion: v1 data: ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ... namespace: dGVzdA == token: ZXlKaGJHY2lPaUpTVXpJMU5pSX... kind: Secret metadata: annotations: kubernetes.io/service-account.name: default kubernetes.io/service-account.uid: 4c51e386-c744-11e9-b46c-025000000001 creationTimestamp: \"2019-08-25T14:26:16Z\" name: default-token-6wgrh namespace: test resourceVersion: \"116678\" selfLink: /api/v1/namespaces/test/secrets/default-token-6wgrh uid: 4c586a91-c744-11e9-b46c-025000000001 type: kubernetes.io/service-account-token Pod \u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u9ed8\u8ba4\u4f7f\u7528\u5f53\u524d namespace \u4e0b default \u7684 ServiceAccount\uff0c\u5e76\u4e14\u5c06\u5176\u5bf9\u5e94\u7684 Secret \u6302\u8f7d\u5230\u5bb9\u5668\u7684 /var/run/secrets/kubernetes.io/serviceaccount \u4e0b\u3002 $ kubectl describe po nginx-66f9f9cfd5-64ht8 -n test Name: nginx-66f9f9cfd5-64ht8 Namespace: test Containers: nginx: Container ID: docker://5d84cb88a19db3390a924f85da507b24c449f9c18bf8ba49e7899eb00b87fc72 Image: nginx:1.16 Port: 80 /TCP Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-6wgrh ( ro ) Volumes: default-token-6wgrh: Type: Secret ( a volume populated by a Secret ) SecretName: default-token-6wgrh Optional: false $ kubectl get po nginx-66f9f9cfd5-64ht8 -n test -oyaml apiVersion: v1 kind: Pod metadata: name: nginx-66f9f9cfd5-64ht8 namespace: test spec: containers: - image: nginx:1.16 name: nginx ports: - containerPort: 80 protocol: TCP volumeMounts: - mountPath: /var/run/secrets/kubernetes.io/serviceaccount name: default-token-6wgrh readOnly: true serviceAccount: default serviceAccountName: default volumes: - name: default-token-6wgrh secret: defaultMode: 420 secretName: default-token-6wgrh","title":"\u7b80\u4ecb"},{"location":"k8s/objects/service-account/#serviceaccount_1","text":"$ kubectl create sa test-sa apiVersion : v1 kind : ServiceAccount metadata : name : test-sa","title":"\u521b\u5efa ServiceAccount"},{"location":"k8s/objects/service-account/#serviceaccount_2","text":"apiVersion : apps/v1 kind : Deployment metadata : name : nginx spec : selector : matchLabels : app : nginx template : metadata : labels : app : nginx spec : serviceAccountName : test-sa containers : - name : nginx image : nginx:1.16 ports : - containerPort : 80 ServiceAccount \u901a\u5e38\u4f1a\u548c Role \u6216\u8005 ClusterRole \u8fdb\u884c\u7ed1\u5b9a\uff0c\u4ece\u800c\u88ab\u8d4b\u4e88\u4e00\u5b9a\u7684\u6743\u9650\uff0c\u4f8b\u5982\u8bfb\u53d6 Pod \u4fe1\u606f\u7b49\u3002\u8be6\u60c5\u67e5\u770b RBAC \u3002","title":"\u4f7f\u7528 ServiceAccount"},{"location":"k8s/objects/service-account/#imagepullsecret","text":"$ kubectl create secret docker-registry private-registry \\ --docker-username = admin \\ --docker-password = admin \\ --docker-email = admin@example.com \\ --docker-server = https://127.0.0.1:5000 $ kubectl create sa test-sa $ kubectl patch sa test-sa -p '{\"imagePullSecrets\": [{\"name\": \"private-registry\"}]}' $ kubectl get sa test-sa -oyaml apiVersion: v1 kind: ServiceAccount metadata: name: test-sa namespace: default secrets: - name: test-sa-token-pmk8t imagePullSecrets: - name: private-registry \u7136\u540e\u4e4b\u540e\u521b\u5efa\u7684 Pod \u5c31\u4f1a\u81ea\u52a8\u5e26\u4e0a\u6307\u5b9a\u7684 imagePullSecrets \uff1a $ kubectl get po nginx-7988dffbf-svfvh -oyaml apiVersion : v1 kind : Pod metadata : name : nginx-7988dffbf-svfvh namespace : default spec : containers : - image : nginx:1.16 name : nginx imagePullSecrets : - name : private-registry","title":"\u6dfb\u52a0 imagePullSecret"},{"location":"k8s/objects/service-account/#_2","text":"Configure Service Accounts for Pods Managing Service Accounts","title":"\u53c2\u8003"},{"location":"k8s/objects/service/","text":"Service \u00b6 \u7c7b\u578b \u00b6 ClusterIP\uff1a\u9ed8\u8ba4\u7c7b\u578b\uff0c\u4f1a\u5206\u914d\u4e00\u4e2a\u96c6\u7fa4\u5185\u53ef\u8bbf\u95ee\u7684\u865a\u62df IP NodePort\uff1a\u4f1a\u66b4\u9732\u4e00\u4e2a\u7aef\u53e3\u51fa\u53bb\uff0c\u901a\u8fc7 <NodeIP>:<NodePort> \u53ef\u4ee5\u8bbf\u95ee LoadBalancer\uff1a\u4f7f\u7528\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1 ExternalName\uff1a\u8f6c\u53d1\u5230\u5176\u5b83\u670d\u52a1\u4e0a \u521b\u5efa Service \u00b6 ClusterIP \u00b6 apiVersion : v1 kind : Service metadata : name : nginx spec : type : ClusterIP selector : app : nginx ports : - port : 80 protocol : TCP targetPort : 80 \u5176\u4e2d port \u662f Service \u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3\uff0c targetPort \u662f\u76ee\u6807 Pod \u7684\u7aef\u53e3\u3002\u5728\u4e0d\u58f0\u660e\u7684\u60c5\u51b5\u4e0b\uff0c targetPort \u9ed8\u8ba4\u548c port \u4fdd\u6301\u4e00\u81f4\u3002 NodePort \u00b6 NodePort \u7c7b\u578b\u7684 Service \u53ef\u4ee5\u4f7f\u7528 <NodeIP>:<NodePort> \u6765\u8bbf\u95ee\uff0c\u4f8b\u5982\uff1a apiVersion : v1 kind : Service metadata : name : nginx spec : type : NodePort selector : app : nginx ports : - port : 80 protocol : TCP targetPort : 80 nodePort : 32080 \u5982\u679c\u4e0d\u6307\u5b9a nodePort \uff0c\u7cfb\u7edf\u4f1a\u9ed8\u8ba4\u5206\u914d\u4e00\u4e2a\u7aef\u53e3\u3002\u9ed8\u8ba4\u7684\u7aef\u53e3\u8303\u56f4\u662f 30000-32767 \u3002 \u66f4\u591a\u8be6\u60c5\u53c2\u8003 Type NodePort \u3002 LoadBalancer \u00b6 \u901a\u8fc7\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u5bf9\u5916\u66b4\u9732\u670d\u52a1\u3002 \u66f4\u591a\u8be6\u60c5\u53c2\u8003 Type LoadBalancer \u3002 ExternalName \u00b6 ExternalName \u7c7b\u578b\u7684 Service \u53ef\u4ee5\u5728 DNS \u89e3\u6790\u9636\u6bb5\uff0c\u5c06\u670d\u52a1\u5730\u5740\u89e3\u6790\u6210\u53e6\u4e00\u4e2a\u5916\u90e8\u670d\u52a1\u7684\u5730\u5740\uff0c\u4ece\u800c\u8fdb\u884c\u8bbf\u95ee\u3002\u4f8b\u5982\uff1a apiVersion : v1 kind : Service metadata : name : httpbin spec : type : ExternalName externalName : httpbin.org \u66f4\u591a\u8be6\u60c5\u53c2\u8003 Type ExternalName \u3002 \u591a\u7aef\u53e3 \u00b6 \u4e00\u4e2a Service \u53ef\u4ee5\u5bf9\u5916\u66b4\u9732\u591a\u4e2a\u7aef\u53e3\uff0c\u6b64\u65f6\u5e94\u5f53\u4e3a\u6bcf\u4e2a\u7aef\u53e3\u6307\u5b9a\u4e00\u4e2a name \uff1a apiVersion : v1 kind : Service metadata : name : my-service spec : selector : app : my-app ports : - name : http protocol : TCP port : 80 targetPort : 9376 - name : https protocol : TCP port : 443 targetPort : 9377 \u670d\u52a1\u53d1\u73b0 \u00b6 \u73af\u5883\u53d8\u91cf \u00b6 \u8be6\u60c5\u53c2\u8003 Environment variables \u3002 \u7531\u4e8e\u5bf9\u670d\u52a1\u542f\u52a8\u987a\u5e8f\u6709\u4f9d\u8d56\uff0c\u56e0\u6b64\u5b9e\u9645\u5f88\u5c11\u4f7f\u7528\u3002 DNS \u00b6 \u670d\u52a1\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7 service-name.namespacee \u7684\u65b9\u5f0f\u6765\u4e92\u76f8\u8bbf\u95ee\uff0c\u5982\u679c\u4e24\u4e2a\u670d\u52a1\u5728\u540c\u4e00\u4e2a namespace \u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 service-name \u6765\u4e92\u76f8\u8bbf\u95ee\u3002 \u4f8b\u5982\uff1a $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP 10 .107.254.54 <none> 80 /TCP 1d $ kubectl run -it --rm busybox --image = busybox:1.28.4 sh If you don ' t see a command prompt, try pressing enter. / # wget http://nginx Connecting to nginx ( 10 .107.254.54:80 ) index.html 100 % | ****************************** | 612 0 :00:00 ETA / # / # nslookup nginx.default Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: nginx.default Address 1 : 10 .107.254.54 nginx.default.svc.cluster.local \u53ef\u4ee5\u770b\u5230 DNS \u89e3\u6790 nginx.default \u7684\u5730\u5740\u5c31\u662f nginx Service \u7684 ClusterIP\u3002 \u66f4\u591a\u8be6\u60c5\u53c2\u8003 DNS for Services and Pods \u3002 Headless Service \u00b6 \u5982\u679c\u663e\u5f0f\u6307\u5b9a clusterIP \u4e3a None \uff0c\u90a3\u4e48\u521b\u5efa\u51fa\u6765\u7684\u5c31\u662f Headless Service\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7528\u6237\u53ef\u4ee5\u5b9a\u5236\u8d1f\u8f7d\u5747\u8861\u7684\u65b9\u5f0f\u3002 Headless Service \u4e0d\u4f1a\u88ab\u81ea\u52a8\u5206\u914d ClusterIP\uff0c\u800c\u4e14 DNS \u89e3\u6790\u4e5f\u4f1a\u76f4\u63a5\u89e3\u6790\u4e3a Pod \u7684\u5730\u5740\u3002 apiVersion : v1 kind : Service metadata : name : nginx spec : selector : app : nginx clusterIP : None ports : - port : 80 protocol : TCP targetPort : 80 $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP None <none> 80 /TCP 16s $ kubectl get po -owide NAME READY STATUS RESTARTS AGE IP NODE nginx-65fc954674-lcvcj 1 /1 Running 0 22s 10 .1.0.62 docker-for-desktop nginx-65fc954674-nsnz2 1 /1 Running 0 22s 10 .1.0.60 docker-for-desktop nginx-65fc954674-s7rmj 1 /1 Running 0 22s 10 .1.0.61 docker-for-desktop $ kubectl run -it --rm busybox --image = busybox:1.28.4 sh If you don ' t see a command prompt, try pressing enter. / # nslookup nginx.default Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: nginx.default Address 1 : 10 .1.0.62 Address 2 : 10 .1.0.60 Address 3 : 10 .1.0.61 \u5bf9\u5916\u63d0\u4f9b\u670d\u52a1 \u00b6 NodePort LoadBalancer Ingress \u53c2\u8003 \u00b6 Service","title":"Service"},{"location":"k8s/objects/service/#service","text":"","title":"Service"},{"location":"k8s/objects/service/#_1","text":"ClusterIP\uff1a\u9ed8\u8ba4\u7c7b\u578b\uff0c\u4f1a\u5206\u914d\u4e00\u4e2a\u96c6\u7fa4\u5185\u53ef\u8bbf\u95ee\u7684\u865a\u62df IP NodePort\uff1a\u4f1a\u66b4\u9732\u4e00\u4e2a\u7aef\u53e3\u51fa\u53bb\uff0c\u901a\u8fc7 <NodeIP>:<NodePort> \u53ef\u4ee5\u8bbf\u95ee LoadBalancer\uff1a\u4f7f\u7528\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1 ExternalName\uff1a\u8f6c\u53d1\u5230\u5176\u5b83\u670d\u52a1\u4e0a","title":"\u7c7b\u578b"},{"location":"k8s/objects/service/#service_1","text":"","title":"\u521b\u5efa Service"},{"location":"k8s/objects/service/#clusterip","text":"apiVersion : v1 kind : Service metadata : name : nginx spec : type : ClusterIP selector : app : nginx ports : - port : 80 protocol : TCP targetPort : 80 \u5176\u4e2d port \u662f Service \u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3\uff0c targetPort \u662f\u76ee\u6807 Pod \u7684\u7aef\u53e3\u3002\u5728\u4e0d\u58f0\u660e\u7684\u60c5\u51b5\u4e0b\uff0c targetPort \u9ed8\u8ba4\u548c port \u4fdd\u6301\u4e00\u81f4\u3002","title":"ClusterIP"},{"location":"k8s/objects/service/#nodeport","text":"NodePort \u7c7b\u578b\u7684 Service \u53ef\u4ee5\u4f7f\u7528 <NodeIP>:<NodePort> \u6765\u8bbf\u95ee\uff0c\u4f8b\u5982\uff1a apiVersion : v1 kind : Service metadata : name : nginx spec : type : NodePort selector : app : nginx ports : - port : 80 protocol : TCP targetPort : 80 nodePort : 32080 \u5982\u679c\u4e0d\u6307\u5b9a nodePort \uff0c\u7cfb\u7edf\u4f1a\u9ed8\u8ba4\u5206\u914d\u4e00\u4e2a\u7aef\u53e3\u3002\u9ed8\u8ba4\u7684\u7aef\u53e3\u8303\u56f4\u662f 30000-32767 \u3002 \u66f4\u591a\u8be6\u60c5\u53c2\u8003 Type NodePort \u3002","title":"NodePort"},{"location":"k8s/objects/service/#loadbalancer","text":"\u901a\u8fc7\u4e91\u670d\u52a1\u5546\u63d0\u4f9b\u7684\u8d1f\u8f7d\u5747\u8861\u5668\u5bf9\u5916\u66b4\u9732\u670d\u52a1\u3002 \u66f4\u591a\u8be6\u60c5\u53c2\u8003 Type LoadBalancer \u3002","title":"LoadBalancer"},{"location":"k8s/objects/service/#externalname","text":"ExternalName \u7c7b\u578b\u7684 Service \u53ef\u4ee5\u5728 DNS \u89e3\u6790\u9636\u6bb5\uff0c\u5c06\u670d\u52a1\u5730\u5740\u89e3\u6790\u6210\u53e6\u4e00\u4e2a\u5916\u90e8\u670d\u52a1\u7684\u5730\u5740\uff0c\u4ece\u800c\u8fdb\u884c\u8bbf\u95ee\u3002\u4f8b\u5982\uff1a apiVersion : v1 kind : Service metadata : name : httpbin spec : type : ExternalName externalName : httpbin.org \u66f4\u591a\u8be6\u60c5\u53c2\u8003 Type ExternalName \u3002","title":"ExternalName"},{"location":"k8s/objects/service/#_2","text":"\u4e00\u4e2a Service \u53ef\u4ee5\u5bf9\u5916\u66b4\u9732\u591a\u4e2a\u7aef\u53e3\uff0c\u6b64\u65f6\u5e94\u5f53\u4e3a\u6bcf\u4e2a\u7aef\u53e3\u6307\u5b9a\u4e00\u4e2a name \uff1a apiVersion : v1 kind : Service metadata : name : my-service spec : selector : app : my-app ports : - name : http protocol : TCP port : 80 targetPort : 9376 - name : https protocol : TCP port : 443 targetPort : 9377","title":"\u591a\u7aef\u53e3"},{"location":"k8s/objects/service/#_3","text":"","title":"\u670d\u52a1\u53d1\u73b0"},{"location":"k8s/objects/service/#_4","text":"\u8be6\u60c5\u53c2\u8003 Environment variables \u3002 \u7531\u4e8e\u5bf9\u670d\u52a1\u542f\u52a8\u987a\u5e8f\u6709\u4f9d\u8d56\uff0c\u56e0\u6b64\u5b9e\u9645\u5f88\u5c11\u4f7f\u7528\u3002","title":"\u73af\u5883\u53d8\u91cf"},{"location":"k8s/objects/service/#dns","text":"\u670d\u52a1\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7 service-name.namespacee \u7684\u65b9\u5f0f\u6765\u4e92\u76f8\u8bbf\u95ee\uff0c\u5982\u679c\u4e24\u4e2a\u670d\u52a1\u5728\u540c\u4e00\u4e2a namespace \u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 service-name \u6765\u4e92\u76f8\u8bbf\u95ee\u3002 \u4f8b\u5982\uff1a $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP 10 .107.254.54 <none> 80 /TCP 1d $ kubectl run -it --rm busybox --image = busybox:1.28.4 sh If you don ' t see a command prompt, try pressing enter. / # wget http://nginx Connecting to nginx ( 10 .107.254.54:80 ) index.html 100 % | ****************************** | 612 0 :00:00 ETA / # / # nslookup nginx.default Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: nginx.default Address 1 : 10 .107.254.54 nginx.default.svc.cluster.local \u53ef\u4ee5\u770b\u5230 DNS \u89e3\u6790 nginx.default \u7684\u5730\u5740\u5c31\u662f nginx Service \u7684 ClusterIP\u3002 \u66f4\u591a\u8be6\u60c5\u53c2\u8003 DNS for Services and Pods \u3002","title":"DNS"},{"location":"k8s/objects/service/#headless-service","text":"\u5982\u679c\u663e\u5f0f\u6307\u5b9a clusterIP \u4e3a None \uff0c\u90a3\u4e48\u521b\u5efa\u51fa\u6765\u7684\u5c31\u662f Headless Service\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u7528\u6237\u53ef\u4ee5\u5b9a\u5236\u8d1f\u8f7d\u5747\u8861\u7684\u65b9\u5f0f\u3002 Headless Service \u4e0d\u4f1a\u88ab\u81ea\u52a8\u5206\u914d ClusterIP\uff0c\u800c\u4e14 DNS \u89e3\u6790\u4e5f\u4f1a\u76f4\u63a5\u89e3\u6790\u4e3a Pod \u7684\u5730\u5740\u3002 apiVersion : v1 kind : Service metadata : name : nginx spec : selector : app : nginx clusterIP : None ports : - port : 80 protocol : TCP targetPort : 80 $ kubectl get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT ( S ) AGE nginx ClusterIP None <none> 80 /TCP 16s $ kubectl get po -owide NAME READY STATUS RESTARTS AGE IP NODE nginx-65fc954674-lcvcj 1 /1 Running 0 22s 10 .1.0.62 docker-for-desktop nginx-65fc954674-nsnz2 1 /1 Running 0 22s 10 .1.0.60 docker-for-desktop nginx-65fc954674-s7rmj 1 /1 Running 0 22s 10 .1.0.61 docker-for-desktop $ kubectl run -it --rm busybox --image = busybox:1.28.4 sh If you don ' t see a command prompt, try pressing enter. / # nslookup nginx.default Server: 10 .96.0.10 Address 1 : 10 .96.0.10 kube-dns.kube-system.svc.cluster.local Name: nginx.default Address 1 : 10 .1.0.62 Address 2 : 10 .1.0.60 Address 3 : 10 .1.0.61","title":"Headless Service"},{"location":"k8s/objects/service/#_5","text":"NodePort LoadBalancer Ingress","title":"\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1"},{"location":"k8s/objects/service/#_6","text":"Service","title":"\u53c2\u8003"},{"location":"k8s/objects/stateful-set/","text":"StatefulSet \u00b6 \u7b80\u4ecb \u00b6 Deployment \u6240\u7ba1\u7406\u7684 Pod\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u65e0\u72b6\u6001\u7684\uff0c\u53ef\u4ee5\u4efb\u610f\u7684\u6c34\u5e73\u6269\u5c55\uff0cPod \u88ab\u9500\u6bc1\u540e\uff0c\u91cd\u65b0\u521b\u5efa\u51fa\u6765\u7684 Pod \u7684\u540d\u5b57\u4e5f\u548c\u4e4b\u524d\u7684\u4e0d\u4e00\u6837\u3002 StatefulSet \u5219\u4e3b\u8981\u7528\u6765\u7ba1\u7406\u6709\u72b6\u6001\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u6570\u636e\u5e93\u7684\u4e3b\u4ece\u5173\u7cfb\u3002\u5e76\u4e14\u5982\u679c\u4e00\u4e2a Pod \u91cd\u65b0\u521b\u5efa\u4e86\uff0c\u4f1a\u4fdd\u6301\u540d\u5b57\u6c38\u8fdc\u662f\u548c\u4e4b\u524d\u4e00\u81f4\u7684\u3002 \u53c2\u8003 \u00b6 StatefulSets","title":"StatefulSet"},{"location":"k8s/objects/stateful-set/#statefulset","text":"","title":"StatefulSet"},{"location":"k8s/objects/stateful-set/#_1","text":"Deployment \u6240\u7ba1\u7406\u7684 Pod\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u65e0\u72b6\u6001\u7684\uff0c\u53ef\u4ee5\u4efb\u610f\u7684\u6c34\u5e73\u6269\u5c55\uff0cPod \u88ab\u9500\u6bc1\u540e\uff0c\u91cd\u65b0\u521b\u5efa\u51fa\u6765\u7684 Pod \u7684\u540d\u5b57\u4e5f\u548c\u4e4b\u524d\u7684\u4e0d\u4e00\u6837\u3002 StatefulSet \u5219\u4e3b\u8981\u7528\u6765\u7ba1\u7406\u6709\u72b6\u6001\u7684\u5e94\u7528\uff0c\u4f8b\u5982\u6570\u636e\u5e93\u7684\u4e3b\u4ece\u5173\u7cfb\u3002\u5e76\u4e14\u5982\u679c\u4e00\u4e2a Pod \u91cd\u65b0\u521b\u5efa\u4e86\uff0c\u4f1a\u4fdd\u6301\u540d\u5b57\u6c38\u8fdc\u662f\u548c\u4e4b\u524d\u4e00\u81f4\u7684\u3002","title":"\u7b80\u4ecb"},{"location":"k8s/objects/stateful-set/#_2","text":"StatefulSets","title":"\u53c2\u8003"},{"location":"k8s/objects/storage-class/","text":"Storage Class \u00b6","title":"StorageClass"},{"location":"k8s/objects/storage-class/#storage-class","text":"","title":"Storage Class"},{"location":"k8s/tools/kubectl/","text":"kubectl \u00b6 kubectl \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u57fa\u672c\u7528\u6cd5\u4e3a\uff1a kubectl [ command ] [ TYPE ] [ NAME ] [ flags ] \u4f8b\u5982\uff1a kubectl get po -A kubectl describe svc nginx -oyaml \u53c2\u8003 \u00b6 Overview of kubectl","title":"kubectl"},{"location":"k8s/tools/kubectl/#kubectl","text":"kubectl \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u57fa\u672c\u7528\u6cd5\u4e3a\uff1a kubectl [ command ] [ TYPE ] [ NAME ] [ flags ] \u4f8b\u5982\uff1a kubectl get po -A kubectl describe svc nginx -oyaml","title":"kubectl"},{"location":"k8s/tools/kubectl/#_1","text":"Overview of kubectl","title":"\u53c2\u8003"}]}